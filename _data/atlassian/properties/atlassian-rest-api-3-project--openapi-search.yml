components:
  schemas:
    PageBeanProject:
      additionalProperties: false
      description: A page of items.
      properties:
        isLast:
          description: Whether this is the last page.
          readOnly: true
          type: boolean
        maxResults:
          description: The maximum number of items that could be returned.
          format: int32
          readOnly: true
          type: integer
        nextPage:
          description: If there is another page of results, the URL of the next page.
          format: uri
          readOnly: true
          type: string
        self:
          description: The URL of the page.
          format: uri
          readOnly: true
          type: string
        startAt:
          description: The index of the first item returned.
          format: int64
          readOnly: true
          type: integer
        total:
          description: The number of items returned.
          format: int64
          readOnly: true
          type: integer
        values:
          description: The list of items.
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          type: array
      type: object
    ProjectType:
      additionalProperties: false
      description: Details about a project type.
      properties:
        color:
          description: The color of the project type.
          readOnly: true
          type: string
        descriptionI18nKey:
          description: The key of the project type's description.
          readOnly: true
          type: string
        formattedKey:
          description: The formatted key of the project type.
          readOnly: true
          type: string
        icon:
          description: The icon of the project type.
          readOnly: true
          type: string
        key:
          description: The key of the project type.
          readOnly: true
          type: string
      type: object
    Project:
      additionalProperties: false
      description: Details about a project.
      properties:
        archived:
          description: Whether the project is archived.
          readOnly: true
          type: boolean
        archivedBy:
          allOf:
            - $ref: '#/components/schemas/User'
          description: The user who archived the project.
          readOnly: true
        archivedDate:
          description: The date when the project was archived.
          format: date-time
          readOnly: true
          type: string
        assigneeType:
          description: The default assignee when creating issues for this project.
          enum:
            - PROJECT_LEAD
            - UNASSIGNED
          readOnly: true
          type: string
        avatarUrls:
          allOf:
            - $ref: '#/components/schemas/AvatarUrlsBean'
          description: The URLs of the project's avatars.
          readOnly: true
        components:
          description: List of the components contained in the project.
          items:
            $ref: '#/components/schemas/ProjectComponent'
          readOnly: true
          type: array
        deleted:
          description: Whether the project is marked as deleted.
          readOnly: true
          type: boolean
        deletedBy:
          allOf:
            - $ref: '#/components/schemas/User'
          description: The user who marked the project as deleted.
          readOnly: true
        deletedDate:
          description: The date when the project was marked as deleted.
          format: date-time
          readOnly: true
          type: string
        description:
          description: A brief description of the project.
          readOnly: true
          type: string
        email:
          description: An email address associated with the project.
          type: string
        expand:
          description: >-
            Expand options that include additional project details in the
            response.
          readOnly: true
          type: string
          xml:
            attribute: true
        favourite:
          description: Whether the project is selected as a favorite.
          type: boolean
        id:
          description: The ID of the project.
          type: string
        insight:
          allOf:
            - $ref: '#/components/schemas/ProjectInsight'
          description: Insights about the project.
          readOnly: true
        isPrivate:
          description: >-
            Whether the project is private from the user's perspective. This
            means the user can't see the project or any associated issues.
          readOnly: true
          type: boolean
        issueTypeHierarchy:
          allOf:
            - $ref: '#/components/schemas/Hierarchy'
          description: The issue type hierarchy for the project.
          readOnly: true
        issueTypes:
          description: List of the issue types available in the project.
          items:
            $ref: '#/components/schemas/IssueTypeDetails'
          readOnly: true
          type: array
        key:
          description: The key of the project.
          readOnly: true
          type: string
        landingPageInfo:
          allOf:
            - $ref: '#/components/schemas/ProjectLandingPageInfo'
          description: The project landing page info.
          readOnly: true
        lead:
          allOf:
            - $ref: '#/components/schemas/User'
          description: The username of the project lead.
          readOnly: true
        name:
          description: The name of the project.
          readOnly: true
          type: string
        permissions:
          allOf:
            - $ref: '#/components/schemas/ProjectPermissions'
          description: User permissions on the project
          readOnly: true
        projectCategory:
          allOf:
            - $ref: '#/components/schemas/ProjectCategory'
          description: The category the project belongs to.
          readOnly: true
        projectTypeKey:
          description: >-
            The [project
            type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes)
            of the project.
          enum:
            - software
            - service_desk
            - business
          readOnly: true
          type: string
        properties:
          additionalProperties:
            readOnly: true
          description: Map of project properties
          readOnly: true
          type: object
        retentionTillDate:
          description: The date when the project is deleted permanently.
          format: date-time
          readOnly: true
          type: string
        roles:
          additionalProperties:
            format: uri
            readOnly: true
            type: string
          description: >-
            The name and self URL for each role defined in the project. For more
            information, see [Create project role](#api-rest-api-3-role-post).
          readOnly: true
          type: object
        self:
          description: The URL of the project details.
          format: uri
          readOnly: true
          type: string
        simplified:
          description: Whether the project is simplified.
          readOnly: true
          type: boolean
        style:
          description: The type of the project.
          enum:
            - classic
            - next-gen
          readOnly: true
          type: string
        url:
          description: >-
            A link to information about this project, such as project
            documentation.
          readOnly: true
          type: string
        uuid:
          description: Unique ID for next-gen projects.
          format: uuid
          readOnly: true
          type: string
        versions:
          description: >-
            The versions defined in the project. For more information, see
            [Create version](#api-rest-api-3-version-post).
          items:
            $ref: '#/components/schemas/Version'
          readOnly: true
          type: array
      type: object
      xml:
        name: project
    ProjectAvatars:
      additionalProperties: false
      description: List of project avatars.
      properties:
        custom:
          description: List of avatars added to Jira. These avatars may be deleted.
          items:
            $ref: '#/components/schemas/Avatar'
          readOnly: true
          type: array
        system:
          description: List of avatars included with Jira. These avatars cannot be deleted.
          items:
            $ref: '#/components/schemas/Avatar'
          readOnly: true
          type: array
      type: object
    PageBeanComponentWithIssueCount:
      additionalProperties: false
      description: A page of items.
      properties:
        isLast:
          description: Whether this is the last page.
          readOnly: true
          type: boolean
        maxResults:
          description: The maximum number of items that could be returned.
          format: int32
          readOnly: true
          type: integer
        nextPage:
          description: If there is another page of results, the URL of the next page.
          format: uri
          readOnly: true
          type: string
        self:
          description: The URL of the page.
          format: uri
          readOnly: true
          type: string
        startAt:
          description: The index of the first item returned.
          format: int64
          readOnly: true
          type: integer
        total:
          description: The number of items returned.
          format: int64
          readOnly: true
          type: integer
        values:
          description: The list of items.
          items:
            $ref: '#/components/schemas/ComponentWithIssueCount'
          readOnly: true
          type: array
      type: object
    ContainerForProjectFeatures:
      additionalProperties: false
      description: The list of features on a project.
      properties:
        features:
          description: The project features.
          items:
            $ref: '#/components/schemas/ProjectFeature'
          type: array
      type: object
    PropertyKeys:
      additionalProperties: false
      description: List of property keys.
      properties:
        keys:
          description: Property key details.
          items:
            $ref: '#/components/schemas/PropertyKey'
          readOnly: true
          type: array
      type: object
    EntityProperty:
      additionalProperties: false
      description: >-
        An entity property, for more information see [Entity
        properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
      properties:
        key:
          description: The key of the property. Required on create and update.
          type: string
        value:
          description: The value of the property. Required on create and update.
      type: object
    ProjectRole:
      additionalProperties: false
      description: Details about the roles in a project.
      properties:
        actors:
          description: The list of users who act in this role.
          items:
            $ref: '#/components/schemas/RoleActor'
          readOnly: true
          type: array
        admin:
          description: Whether this role is the admin role for the project.
          readOnly: true
          type: boolean
        currentUserRole:
          description: Whether the calling user is part of this role.
          type: boolean
        default:
          description: Whether this role is the default role for the project
          readOnly: true
          type: boolean
        description:
          description: The description of the project role.
          readOnly: true
          type: string
        id:
          description: The ID of the project role.
          format: int64
          readOnly: true
          type: integer
        name:
          description: The name of the project role.
          type: string
        roleConfigurable:
          description: Whether the roles are configurable for this project.
          readOnly: true
          type: boolean
        scope:
          allOf:
            - $ref: '#/components/schemas/Scope'
          description: >-
            The scope of the role. Indicated for roles associated with [next-gen
            projects](https://confluence.atlassian.com/x/loMyO).
          readOnly: true
        self:
          description: The URL the project role details.
          format: uri
          readOnly: true
          type: string
        translatedName:
          description: The translated name of the project role.
          type: string
      type: object
    PageBeanVersion:
      additionalProperties: false
      description: A page of items.
      properties:
        isLast:
          description: Whether this is the last page.
          readOnly: true
          type: boolean
        maxResults:
          description: The maximum number of items that could be returned.
          format: int32
          readOnly: true
          type: integer
        nextPage:
          description: If there is another page of results, the URL of the next page.
          format: uri
          readOnly: true
          type: string
        self:
          description: The URL of the page.
          format: uri
          readOnly: true
          type: string
        startAt:
          description: The index of the first item returned.
          format: int64
          readOnly: true
          type: integer
        total:
          description: The number of items returned.
          format: int64
          readOnly: true
          type: integer
        values:
          description: The list of items.
          items:
            $ref: '#/components/schemas/Version'
          readOnly: true
          type: array
      type: object
    ProjectEmailAddress:
      additionalProperties: false
      description: A project's sender email address.
      properties:
        emailAddress:
          description: The email address.
          type: string
        emailAddressStatus:
          description: When using a custom domain, the status of the email address.
          items:
            type: string
          type: array
      type: object
    ProjectIssueTypeHierarchy:
      additionalProperties: false
      description: The hierarchy of issue types within a project.
      properties:
        hierarchy:
          description: Details of an issue type hierarchy level.
          items:
            $ref: '#/components/schemas/ProjectIssueTypesHierarchyLevel'
          readOnly: true
          type: array
        projectId:
          description: The ID of the project.
          format: int64
          readOnly: true
          type: integer
      type: object
    SecurityScheme:
      additionalProperties: false
      description: Details about a security scheme.
      properties:
        defaultSecurityLevelId:
          description: The ID of the default security level.
          format: int64
          readOnly: true
          type: integer
        description:
          description: The description of the issue security scheme.
          readOnly: true
          type: string
        id:
          description: The ID of the issue security scheme.
          format: int64
          readOnly: true
          type: integer
        levels:
          items:
            $ref: '#/components/schemas/SecurityLevel'
          type: array
        name:
          description: The name of the issue security scheme.
          readOnly: true
          type: string
        self:
          description: The URL of the issue security scheme.
          readOnly: true
          type: string
      type: object
    NotificationScheme:
      additionalProperties: false
      description: Details about a notification scheme.
      properties:
        description:
          description: The description of the notification scheme.
          type: string
        expand:
          description: >-
            Expand options that include additional notification scheme details
            in the response.
          type: string
        id:
          description: The ID of the notification scheme.
          format: int64
          type: integer
        name:
          description: The name of the notification scheme.
          type: string
        notificationSchemeEvents:
          description: The notification events and associated recipients.
          items:
            $ref: '#/components/schemas/NotificationSchemeEvent'
          type: array
        projects:
          description: The list of project IDs associated with the notification scheme.
          items:
            format: int64
            type: integer
          type: array
        scope:
          allOf:
            - $ref: '#/components/schemas/Scope'
          description: The scope of the notification scheme.
        self:
          type: string
      type: object
    PermissionScheme:
      additionalProperties: true
      description: Details of a permission scheme.
      properties:
        description:
          description: A description for the permission scheme.
          type: string
        expand:
          description: The expand options available for the permission scheme.
          readOnly: true
          type: string
        id:
          description: The ID of the permission scheme.
          format: int64
          readOnly: true
          type: integer
        name:
          description: The name of the permission scheme. Must be unique.
          type: string
        permissions:
          description: >-
            The permission scheme to create or update. See [About permission
            schemes and
            grants](../api-group-permission-schemes/#about-permission-schemes-and-grants)
            for more information.
          items:
            $ref: '#/components/schemas/PermissionGrant'
          type: array
        scope:
          allOf:
            - $ref: '#/components/schemas/Scope'
          description: The scope of the permission scheme.
        self:
          description: The URL of the permission scheme.
          format: uri
          readOnly: true
          type: string
      required:
        - name
      type: object
    ProjectIssueSecurityLevels:
      additionalProperties: false
      description: List of issue level security items in a project.
      properties:
        levels:
          description: Issue level security items list.
          items:
            $ref: '#/components/schemas/SecurityLevel'
          readOnly: true
          type: array
      required:
        - levels
      type: object
externalDocs:
  description: Find out more about Atlassian products and services.
  url: http://www.atlassian.com
info:
  contact:
    email: ecosystem@atlassian.com
  description: Needs description.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://atlassian.com/terms/
  title: ' rest/api/3/project/'
  version: 1001.0.0-SNAPSHOT-67b5c6e5f3598d7ec1649016d026468ab2838a77
openapi: 3.0.1
paths:
  /rest/api/3/project/recent:
    get:
      deprecated: false
      description: >-
        Returns a list of up to 20 projects recently viewed by the user that are
        still visible to the user.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** Projects are returned only
        where the user has one of:

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getRecent
      parameters:
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Expanded
            options include:

             *  `description` Returns the project description.
             *  `projectKeys` Returns all project keys associated with a project.
             *  `lead` Returns information about the project lead.
             *  `issueTypes` Returns all issue types associated with the project.
             *  `url` Returns the URL associated with the project.
             *  `permissions` Returns the permissions associated with the project.
             *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
             *  `*` Returns the project with all available expand options.
          in: query
          name: expand
          schema:
            type: string
        - description: >-
            EXPERIMENTAL. A list of project properties to return for the
            project. This parameter accepts a comma-separated list. Invalid
            property names are ignored.
          in: query
          name: properties
          schema:
            items:
              $ref: '#/components/schemas/StringList'
            type: array
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"CLASSIC"},{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"CLASSIC"}]
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Recent Projects '
      tags:
        - Projects
        - REST
        - Recent
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:project:jira
            - read:project.property:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /rest/api/3/project/search:
    get:
      deprecated: false
      description: >-
        Returns a [paginated](#pagination) list of projects visible to the user.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** Projects are returned only
        where the user has one of:

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: searchProjects
      parameters:
        - description: >-
            The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          in: query
          name: maxResults
          schema:
            default: 50
            format: int32
            type: integer
        - description: |-
            [Order](#ordering) the results by a field.

             *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).
             *  `issueCount` Sorts by the total number of issues in each project.
             *  `key` Sorts by project key.
             *  `lastIssueUpdatedTime` Sorts by the last issue update time.
             *  `name` Sorts by project name.
             *  `owner` Sorts by project lead.
             *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.
             *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date.
          in: query
          name: orderBy
          schema:
            default: key
            enum:
              - category
              - '-category'
              - +category
              - key
              - '-key'
              - +key
              - name
              - '-name'
              - +name
              - owner
              - '-owner'
              - +owner
              - issueCount
              - '-issueCount'
              - +issueCount
              - lastIssueUpdatedDate
              - '-lastIssueUpdatedDate'
              - +lastIssueUpdatedDate
              - archivedDate
              - +archivedDate
              - '-archivedDate'
              - deletedDate
              - +deletedDate
              - '-deletedDate'
            type: string
        - description: >-
            The project IDs to filter the results by. To include multiple IDs,
            provide an ampersand-separated list. For example,
            `id=10000&id=10001`. Up to 50 project IDs can be provided.
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
            uniqueItems: true
        - description: >-
            The project keys to filter the results by. To include multiple keys,
            provide an ampersand-separated list. For example, `keys=PA&keys=PB`.
            Up to 50 project keys can be provided.
          in: query
          name: keys
          schema:
            items:
              default: ''
              type: string
            type: array
            uniqueItems: true
        - description: >-
            Filter the results using a literal string. Projects with a matching
            `key` or `name` are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
        - description: >-
            Orders results by the [project
            type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes).
            This parameter accepts a comma-separated list. Valid values are
            `business`, `service_desk`, and `software`.
          in: query
          name: typeKey
          schema:
            type: string
        - description: >-
            The ID of the project's category. A complete list of category IDs is
            found using the [Get all project
            categories](#api-rest-api-3-projectCategory-get) operation.
          in: query
          name: categoryId
          schema:
            format: int64
            type: integer
        - description: |-
            Filter results by projects for which the user can:

             *  `view` the project, meaning that they have one of the following permissions:
                
                 *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
                 *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
                 *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
             *  `browse` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
             *  `edit` the project, meaning that they have one of the following permissions:
                
                 *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
                 *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
             *  `create` the project, meaning that they have the *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue is created.
          in: query
          name: action
          schema:
            default: view
            enum:
              - view
              - browse
              - edit
              - create
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Expanded
            options include:

             *  `description` Returns the project description.
             *  `projectKeys` Returns all project keys associated with a project.
             *  `lead` Returns information about the project lead.
             *  `issueTypes` Returns all issue types associated with the project.
             *  `url` Returns the URL associated with the project.
             *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
          in: query
          name: expand
          schema:
            type: string
        - description: |-
            EXPERIMENTAL. Filter results by project status:

             *  `live` Search live projects.
             *  `archived` Search archived projects.
             *  `deleted` Search deleted projects, those in the recycle bin.
          in: query
          name: status
          schema:
            items:
              default: live
              enum:
                - live
                - archived
                - deleted
              type: string
            type: array
        - description: >-
            EXPERIMENTAL. A list of project properties to return for the
            project. This parameter accepts a comma-separated list.
          in: query
          name: properties
          schema:
            items:
              $ref: '#/components/schemas/StringList'
            type: array
        - description: >-
            EXPERIMENTAL. A query string used to search properties. The query
            string cannot be specified using a JSON object. For example, to
            search for the value of `nested` from
            `{"something":{"nested":1,"other":2}}` use
            `[thepropertykey].something.nested=1`. Note that the propertyQuery
            key is enclosed in square brackets to enable searching where the
            propertyQuery key includes dot (.) or equals (=) characters. Note
            that `thepropertykey` is only returned when included in
            `properties`.
          in: query
          name: propertyQuery
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"classic"}]}
              schema:
                $ref: '#/components/schemas/PageBeanProject'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: Returned if no projects matching the search criteria are found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Projects Paginated '
      tags:
        - Paginated
        - Projects
        - REST
        - Search
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:project:jira
            - read:project.property:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/type:
    get:
      deprecated: false
      description: >-
        Returns all [project types](https://confluence.atlassian.com/x/Var1Nw),
        whether or not the instance has a valid license for each type.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None.
      operationId: getAllProjectTypes
      parameters: []
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"},{"color":"#AAAAAA","descriptionI18nKey":"jira.project.type.software.description","formattedKey":"Software","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"software"}]
              schema:
                items:
                  $ref: '#/components/schemas/ProjectType'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get All Project Types '
      tags:
        - Projects
        - REST
        - Types
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-type:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/type/accessible:
    get:
      deprecated: false
      description: >-
        Returns all [project types](https://confluence.atlassian.com/x/Var1Nw)
        with a valid license.
      operationId: getAllAccessibleProjectTypes
      parameters: []
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"},{"color":"#AAAAAA","descriptionI18nKey":"jira.project.type.software.description","formattedKey":"Software","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"software"}]
              schema:
                items:
                  $ref: '#/components/schemas/ProjectType'
                type: array
          description: Returned if the request is successful.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Licensed Project Types '
      tags:
        - Accessible
        - Licensed
        - Projects
        - REST
        - Types
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-type:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/type/{projectTypeKey}:
    get:
      deprecated: false
      description: |-
        Returns a [project type](https://confluence.atlassian.com/x/Var1Nw).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getProjectTypeByKey
      parameters:
        - description: The key of the project type.
          in: path
          name: projectTypeKey
          required: true
          schema:
            enum:
              - software
              - service_desk
              - business
              - product_discovery
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"}
              schema:
                $ref: '#/components/schemas/ProjectType'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the project type is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Type By Key '
      tags:
        - Keys
        - Projects
        - REST
        - Types
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-type:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/type/{projectTypeKey}/accessible:
    get:
      deprecated: false
      description: >-
        Returns a [project type](https://confluence.atlassian.com/x/Var1Nw) if
        it is accessible to the user.


        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getAccessibleProjectTypeByKey
      parameters:
        - description: The key of the project type.
          in: path
          name: projectTypeKey
          required: true
          schema:
            enum:
              - software
              - service_desk
              - business
              - product_discovery
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"}
              schema:
                $ref: '#/components/schemas/ProjectType'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: Returned if the project type is not accessible to the user.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Accessible Project Type By Key '
      tags:
        - Accessible
        - Keys
        - Projects
        - REST
        - Types
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-type:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}:
    delete:
      deprecated: false
      description: >-
        Deletes a project.


        You can't delete a project if it's archived. To delete an archived
        project, restore the project and then delete it. To restore a project,
        use the Jira UI.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            example: '10001'
            type: string
        - description: >-
            Whether this project is placed in the Jira recycle bin where it will
            be available for restoration.
          in: query
          name: enableUndo
          schema:
            default: true
            type: boolean
      responses:
        '204':
          description: Returned if the project is deleted.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to delete it.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-configuration
        - {}
      summary: 'Delete Project '
      tags:
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-configuration
          state: Current
        - scheme: OAuth2
          scopes:
            - delete:project:jira
          state: Beta
      x-atlassian-connect-scope: ADMIN
    get:
      deprecated: false
      description: >-
        Returns the [project details](https://confluence.atlassian.com/x/ahLpNw)
        for a project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Note that
            the project description, issue types, and project lead are included
            in all responses by default. Expand options include:

             *  `description` The project description.
             *  `issueTypes` The issue types associated with the project.
             *  `lead` The project lead.
             *  `projectKeys` All project keys associated with the project.
             *  `issueTypeHierarchy` The project issue type hierarchy.
          in: query
          name: expand
          schema:
            type: string
        - description: >-
            A list of project properties to return for the project. This
            parameter accepts a comma-separated list.
          in: query
          name: properties
          schema:
            items:
              default: ''
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for
                REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be
                done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the
                software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}
              schema:
                $ref: '#/components/schemas/Project'
          description: Returned if successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project '
      tags:
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:project:jira
            - read:project.property:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Updates the [project details](https://confluence.atlassian.com/x/ahLpNw)
        of a project.


        All parameters are optional in the body of the request. Schemes will
        only be updated if they are included in the request, any omitted schemes
        will be left unchanged.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg). is only needed
        when changing the schemes or project key. Otherwise you will only need
        *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg)
      operationId: updateProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            example: '10001'
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Note that
            the project description, issue types, and project lead are included
            in all responses by default. Expand options include:

             *  `description` The project description.
             *  `issueTypes` The issue types associated with the project.
             *  `lead` The project lead.
             *  `projectKeys` All project keys associated with the project.
          in: query
          name: expand
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              assigneeType: PROJECT_LEAD
              avatarId: 10200
              categoryId: 10120
              description: Cloud migration initiative
              issueSecurityScheme: 10001
              key: EX
              leadAccountId: 5b10a0effa615349cb016cd8
              name: Example
              notificationScheme: 10021
              permissionScheme: 10011
              url: http://atlassian.com
            schema:
              $ref: '#/components/schemas/UpdateProjectDetails'
        description: The project details to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for
                REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be
                done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the
                software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}
              schema:
                $ref: '#/components/schemas/Project'
          description: Returned if the project is updated.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: |-
            Returned if:

             *  the user does not have the necessary permission to update project details.
             *  the permission scheme is being changed and the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be changed on free plans.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Update Project '
      tags:
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:project:jira
            - read:project.property:jira
            - read:user:jira
            - write:project:jira
            - write:project.avatar:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: ADMIN
  /rest/api/3/project/{projectIdOrKey}/archive:
    post:
      deprecated: false
      description: >-
        Archives a project. You can't delete a project if it's archived. To
        delete an archived project, restore the project and then delete it. To
        restore a project, use the Jira UI.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: archiveProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Archive Project '
      tags:
        - Archive
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project:jira
          state: Beta
      x-atlassian-connect-scope: ADMIN
  /rest/api/3/project/{projectIdOrKey}/avatar:
    put:
      deprecated: false
      description: >-
        Sets the avatar displayed for a project.


        Use [Load project
        avatar](#api-rest-api-3-project-projectIdOrKey-avatar2-post) to store
        avatars against the project, before using this operation to set the
        displayed avatar.


        **[Permissions](#permissions) required:** *Administer projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: updateProjectAvatar
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              id: '10010'
            schema:
              $ref: '#/components/schemas/Avatar'
        required: true
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the user does not have permission to administer the
            project.
        '404':
          description: >-
            Returned if the project or avatar is not found or the user does not
            have permission to view the project.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Set Project Avatar '
      tags:
        - Avatars
        - Keys
        - Projects
        - REST
        - Sets
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project.avatar:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectIdOrKey}/avatar/{id}:
    delete:
      deprecated: false
      description: >-
        Deletes a custom avatar from a project. Note that system avatars cannot
        be deleted.


        **[Permissions](#permissions) required:** *Administer projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: deleteProjectAvatar
      parameters:
        - description: The project ID or (case-sensitive) key.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The ID of the avatar.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '204':
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the avatar is a system avatar or the user does not have
            permission to administer the project.
        '404':
          description: >-
            Returned if the project or avatar is not found or the user does not
            have permission to view the project.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Delete Project Avatar '
      tags:
        - Avatars
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - delete:project.avatar:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectIdOrKey}/avatar2:
    post:
      deprecated: false
      description: >-
        Loads an avatar for a project.


        Specify the avatar's local file location in the body of the request.
        Also, include the following headers:

         *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).
         *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or PNG.

        For example:  

        `curl --request POST `


        `--user email@example.com:<api_token> `


        `--header 'X-Atlassian-Token: no-check' `


        `--header 'Content-Type: image/< image_type>' `


        `--data-binary "<@/path/to/file/with/your/avatar>" `


        `--url
        'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}/avatar2'`


        The avatar is cropped to a square. If no crop parameters are specified,
        the square originates at the top left of the image. The length of the
        square's sides is set to the smaller of the height or width of the
        image.


        The cropped image is then used to create avatars of 16x16, 24x24, 32x32,
        and 48x48 in size.


        After creating the avatar use [Set project
        avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put) to set it as
        the project's displayed avatar.


        **[Permissions](#permissions) required:** *Administer projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: createProjectAvatar
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The X coordinate of the top-left corner of the crop region.
          in: query
          name: x
          schema:
            default: 0
            format: int32
            type: integer
        - description: The Y coordinate of the top-left corner of the crop region.
          in: query
          name: 'y'
          schema:
            default: 0
            format: int32
            type: integer
        - description: The length of each side of the crop region.
          in: query
          name: size
          schema:
            default: 0
            format: int32
            type: integer
      requestBody:
        content:
          '*/*':
            schema: {}
        required: true
      responses:
        '201':
          content:
            application/json:
              example: >-
                {"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false}
              schema:
                $ref: '#/components/schemas/Avatar'
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  an image isn't included in the request.
             *  the image type is unsupported.
             *  the crop parameters extend the crop area beyond the edge of the image.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the user does not have permission to administer the
            project or an anonymous call is made to the operation.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view the project.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Load Project Avatar '
      tags:
        - Avatars
        - Keys
        - Load
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project.avatar:jira
            - read:avatar:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectIdOrKey}/avatars:
    get:
      deprecated: false
      description: >-
        Returns all project avatars, grouped by system and custom avatars.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getAllProjectAvatars
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"custom":[{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project"}}],"system":[{"id":"1000","isDeletable":false,"isSelected":false,"isSystemAvatar":true,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project"}}]}
              schema:
                $ref: '#/components/schemas/ProjectAvatars'
          description: Returned if request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view the project.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get All Project Avatars '
      tags:
        - Avatars
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project.avatar:jira
            - read:avatar:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/classification-level/default:
    delete:
      deprecated: false
      description: |-
        Remove the default data classification level for a project.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeDefaultProjectClassification
      parameters:
        - description: The project ID or project key (case-sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Remove The Default Data Classification Level From A Project '
      tags:
        - Classifications
        - Data
        - Default
        - Keys
        - Levels
        - Projects
        - REST
        - Removes
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    get:
      deprecated: false
      description: |-
        Returns the default data classification for a project.

        **[Permissions](#permissions) required:**

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getDefaultProjectClassification
      parameters:
        - description: The project ID or project key (case-sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"classification":{"id":"ari:cloud:platform::classification-tag/5bfa70f7-4af1-44f5-9e12-1ce185f15a38","status":"published","name":"Restricted","rank":1,"description":"Data
                we hold that would be very damaging and would cause loss of
                trust with customers and present legal risk if
                mishandled","guideline":"Access to data must be restricted to
                only individuals who need access in order to perform their job
                duties.","color":"RED"}}
              schema: {}
          description: Returned if the request is successful.
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get The Default Data Classification Level Of A Project '
      tags:
        - Classifications
        - Data
        - Default
        - Keys
        - Levels
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: |-
        Updates the default data classification level for a project.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDefaultProjectClassification
      parameters:
        - description: The project ID or project key (case-sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              id: >-
                ari:cloud:platform::classification-tag/dec24c48-5073-4c25-8fef-9d81a992c30c
            schema:
              $ref: '#/components/schemas/UpdateDefaultProjectClassificationBean'
        required: true
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Update The Default Data Classification Level Of A Project '
      tags:
        - Classifications
        - Data
        - Default
        - Keys
        - Levels
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /rest/api/3/project/{projectIdOrKey}/component:
    get:
      deprecated: false
      description: >-
        Returns a [paginated](#pagination) list of all components in a project.
        See the [Get project
        components](#api-rest-api-3-project-projectIdOrKey-components-get)
        resource if you want to get a full list of versions without pagination.


        If your project uses Compass components, this API will return a list of
        Compass components that are linked to issues in that project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectComponentsPaginated
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          in: query
          name: maxResults
          schema:
            default: 50
            format: int32
            type: integer
        - description: |-
            [Order](#ordering) the results by a field:

             *  `description` Sorts by the component description.
             *  `issueCount` Sorts by the count of issues associated with the component.
             *  `lead` Sorts by the user key of the component's project lead.
             *  `name` Sorts by component name.
          in: query
          name: orderBy
          schema:
            enum:
              - description
              - '-description'
              - +description
              - issueCount
              - '-issueCount'
              - +issueCount
              - lead
              - '-lead'
              - +lead
              - name
              - '-name'
              - +name
            type: string
        - description: >-
            The source of the components to return. Can be `jira` (default),
            `compass` or `auto`. When `auto` is specified, the API will return
            connected Compass components if the project is opted into Compass,
            otherwise it will return Jira components. Defaults to `jira`.
          in: query
          name: componentSource
          schema:
            default: jira
            enum:
              - jira
              - compass
              - auto
            type: string
        - description: >-
            Filter the results using a literal string. Components with a
            matching `name` or `description` are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","componentBean":{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},"description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"issueCount":1,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},{"assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","componentBean":{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-11ee-4e70-be56-0242ac120002/fdb3fdec-4e70-11ee-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a another Jira
                component","id":"10050","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},"description":"This
                is a another Jira
                component","id":"10050","isAssigneeTypeValid":false,"issueCount":5,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}]}
              schema:
                $ref: '#/components/schemas/PageBeanComponentWithIssueCount'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Components Paginated '
      tags:
        - Components
        - Keys
        - Paginated
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project:jira
            - read:project.component:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/components:
    get:
      deprecated: false
      description: >-
        Returns all components in a project. See the [Get project components
        paginated](#api-rest-api-3-project-projectIdOrKey-component-get)
        resource if you want to get a full list of components with pagination.


        If your project uses Compass components, this API will return a
        paginated list of Compass components that are linked to issues in that
        project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectComponents
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The source of the components to return. Can be `jira` (default),
            `compass` or `auto`. When `auto` is specified, the API will return
            connected Compass components if the project is opted into Compass,
            otherwise it will return Jira components. Defaults to `jira`.
          in: query
          name: componentSource
          schema:
            default: jira
            enum:
              - jira
              - compass
              - auto
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-11ee-4e70-be56-0242ac120002/fdb3fdec-4e70-11ee-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a another Jira
                component","id":"10050","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}]
              schema:
                items:
                  $ref: '#/components/schemas/ProjectComponent'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Components '
      tags:
        - Components
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project:jira
            - read:project.component:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/delete:
    post:
      deprecated: false
      description: >-
        Deletes a project asynchronously.


        This operation is:

         *  transactional, that is, if part of the delete fails the project is not deleted.
         *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProjectAsynchronously
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '303':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have the
            necessary permission.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-configuration
        - {}
      summary: 'Delete Project Asynchronously '
      tags:
        - Asynchronously
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-configuration
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project:jira
            - write:project.property:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /rest/api/3/project/{projectIdOrKey}/features:
    get:
      deprecated: false
      description: Returns the list of features for a project.
      operationId: getFeaturesForProject
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"features":[{"feature":"jsw.classic.roadmap","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-roadmap-feature.svg","localisedDescription":"Your
                roadmap is an optimized location to create and manage your
                epics.","localisedName":"Roadmap","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true},{"feature":"jsw.classic.backlog","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-backlog-feature.svg","localisedDescription":"Plan
                and prioritize work in a dedicated space. To enable and
                configure the backlog for each board, go to board
                settings.","localisedName":"Backlog","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true}]}
              schema:
                $ref: '#/components/schemas/ContainerForProjectFeatures'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get Project Features '
      tags:
        - Features
        - Keys
        - Projects
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project.feature:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/features/{featureKey}:
    put:
      deprecated: false
      description: Sets the state of a project feature.
      operationId: toggleFeatureForProject
      parameters:
        - description: The ID or (case-sensitive) key of the project.
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: The key of the feature.
          in: path
          name: featureKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              state: ENABLED
            schema:
              $ref: '#/components/schemas/ProjectFeatureState'
        description: Details of the feature state change.
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"features":[{"feature":"jsw.classic.roadmap","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-roadmap-feature.svg","localisedDescription":"Your
                roadmap is an optimized location to create and manage your
                epics.","localisedName":"Roadmap","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true},{"feature":"jsw.classic.backlog","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-backlog-feature.svg","localisedDescription":"Plan
                and prioritize work in a dedicated space. To enable and
                configure the backlog for each board, go to board
                settings.","localisedName":"Backlog","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true}]}
              schema:
                $ref: '#/components/schemas/ContainerForProjectFeatures'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the project or project feature is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Set Project Feature State '
      tags:
        - Feature
        - Features
        - Keys
        - Projects
        - REST
        - Sets
        - States
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project.feature:jira
            - read:project.feature:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectIdOrKey}/properties:
    get:
      deprecated: false
      description: >-
        Returns all [project
        property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties)
        keys for the project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectPropertyKeys
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}
              schema:
                $ref: '#/components/schemas/PropertyKeys'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to view the project.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Property Keys '
      tags:
        - Keys
        - Projects
        - Properties
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project.property:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/properties/{propertyKey}:
    delete:
      deprecated: false
      description: >-
        Deletes the
        [property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties)
        from a project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        containing the property.
      operationId: deleteProjectProperty
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The project property key. Use [Get project property
            keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get
            a list of all project property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Returned if the project property is deleted.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: >-
            Returned if the user does not have permission to administer the
            project.
        '404':
          description: Returned if the project or property is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Delete Project Property '
      tags:
        - Keys
        - Projects
        - Properties
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - delete:project.property:jira
          state: Beta
      x-atlassian-connect-scope: DELETE
    get:
      deprecated: false
      description: >-
        Returns the value of a [project
        property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        containing the property.
      operationId: getProjectProperty
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The project property key. Use [Get project property
            keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get
            a list of all project property keys.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}
              schema:
                $ref: '#/components/schemas/EntityProperty'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to view the project.
        '404':
          description: Returned if the project or property is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Property '
      tags:
        - Keys
        - Projects
        - Properties
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project.property:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Sets the value of the [project
        property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).
        You can use project properties to store custom data against the project.


        The value of the request body must be a
        [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The
        maximum length is 32768 characters.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        in which the property is created.
      operationId: setProjectProperty
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The key of the project property. The maximum length is 255
            characters.
          in: path
          name: propertyKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              number: 5
              string: string-value
            schema: {}
        description: >-
          The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length
          of the property value is 32768 bytes.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Returned if the project property is updated.
        '201':
          content:
            application/json:
              schema: {}
          description: Returned if the project property is created.
        '400':
          description: Returned if the project key or id is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: >-
            Returned if the user does not have permission to administer the
            project.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Set Project Property '
      tags:
        - Keys
        - Projects
        - Properties
        - REST
        - Sets
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project.property:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/project/{projectIdOrKey}/restore:
    post:
      deprecated: false
      description: >-
        Restores a project that has been archived or placed in the Jira recycle
        bin.


        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)for Company managed projects.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project for Team managed projects.
      operationId: restore
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira
                component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for
                REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be
                done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the
                software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}
              schema:
                $ref: '#/components/schemas/Project'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have the
            necessary permission.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-configuration
        - {}
      summary: 'Restore Deleted Or Archived Project '
      tags:
        - Archived
        - Keys
        - Projects
        - REST
        - Restore
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-configuration
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:project:jira
            - read:project.property:jira
            - read:user:jira
            - write:project:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /rest/api/3/project/{projectIdOrKey}/role:
    get:
      deprecated: false
      description: >-
        Returns a list of [project
        roles](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/)
        for the project returning the name and self URL for each role.


        Note that all project roles are shared with all projects in Jira Cloud.
        See [Get all project roles](#api-rest-api-3-role-get) for more
        information.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for any project
        on the site or *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRoles
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"Administrators":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10002","Developers":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10000","Users":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10001"}
              schema:
                additionalProperties:
                  format: uri
                  type: string
                type: object
          description: Returned if the request is successful.
        '401':
          description: >-
            Returned if the authentication credentials are incorrect or missing
            or if the user lacks administrative permissions for the project.
        '404':
          description: >-
            Returned if the project is not found or or if the user does not have
            administrative permissions for the project.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Roles For Project '
      tags:
        - Keys
        - Projects
        - REST
        - Roles
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-role:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/role/{id}:
    delete:
      deprecated: false
      description: >-
        Deletes actors from a project role for the project.


        To remove default actors from the project role, use [Delete default
        actors from project role](#api-rest-api-3-role-id-actors-delete).


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        or *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteActor
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The ID of the project role. Use [Get all project
            roles](#api-rest-api-3-role-get) to get a list of project role IDs.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: The user account ID of the user to remove from the project role.
          in: query
          name: user
          schema:
            example: 5b10ac8d82e05b22cc7d4ef5
            type: string
          x-showInExample: 'true'
        - description: >-
            The name of the group to remove from the project role. This
            parameter cannot be used with the `groupId` parameter. As a group's
            name can change, use of `groupId` is recommended.
          in: query
          name: group
          schema:
            type: string
        - description: >-
            The ID of the group to remove from the project role. This parameter
            cannot be used with the `group` parameter.
          in: query
          name: groupId
          schema:
            type: string
      responses:
        '204':
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '404':
          description: |-
            Returned if:

             *  the project or project role is not found.
             *  the calling user does not have administrative permission.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Delete Actors From Project Role '
      tags:
        - Actors
        - Keys
        - Projects
        - REST
        - Roles
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - delete:project-role:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    get:
      deprecated: false
      description: >-
        Returns a project role's details and actors associated with the project.
        The list of actors is sorted by display name.


        To check whether a user belongs to a role based on their group
        memberships, use [Get user](#api-rest-api-3-user-get) with the `groups`
        expand parameter selected. Then check whether the user keys and groups
        match with the actors returned for the project.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        or *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRole
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The ID of the project role. Use [Get all project
            roles](#api-rest-api-3-role-get) to get a list of project role IDs.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: Exclude inactive users.
          in: query
          name: excludeInactiveUsers
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a
                project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}
              schema:
                $ref: '#/components/schemas/ProjectRole'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: |-
            Returned if:

             *  the project or project role is not found.
             *  the user does not have administrative permission.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Role For Project '
      tags:
        - Keys
        - Projects
        - REST
        - Roles
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:user:jira
            - read:group:jira
            - read:project-role:jira
            - read:project:jira
            - read:avatar:jira
            - read:project-category:jira
          state: Beta
      x-atlassian-connect-scope: READ
    post:
      deprecated: false
      description: >-
        Adds actors to a project role for the project.


        To replace all actors for the project, use [Set actors for project
        role](#api-rest-api-3-project-projectIdOrKey-role-id-put).


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        or *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addActorUsers
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The ID of the project role. Use [Get all project
            roles](#api-rest-api-3-role-get) to get a list of project role IDs.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            example:
              groupId:
                - 952d12c3-5b5b-4d04-bb32-44d383afc4b2
            schema:
              $ref: '#/components/schemas/ActorsMap'
        description: >-
          The groups or users to associate with the project role for this
          project. Provide the user account ID, group name, or group ID. As a
          group's name can change, use of group ID is recommended.
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a
                project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}
              schema:
                $ref: '#/components/schemas/ProjectRole'
          description: >-
            Returned if the request is successful. The complete list of actors
            for the project is returned.


            For example, the cURL request above adds a group, *jira-developers*.
            For the response below to be returned as a result of that request,
            the user *Mia Krystof* would have previously been added as a `user`
            actor for this project.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: >-
            Returned if the authentication credentials are incorrect or missing
            or if the calling user lacks administrative permissions for the
            project.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  the user or group is not found.
             *  the group or user is not active.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-configuration
        - {}
      summary: 'Add Actors To Project Role '
      tags:
        - Actors
        - Keys
        - Projects
        - REST
        - Roles
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-configuration
          state: Current
        - scheme: OAuth2
          scopes:
            - read:user:jira
            - read:group:jira
            - read:project-role:jira
            - read:project:jira
            - write:project-role:jira
            - read:avatar:jira
            - read:project-category:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    put:
      deprecated: false
      description: >-
        Sets the actors for a project role for a project, replacing all existing
        actors.


        To add actors to the project without overwriting the existing list, use
        [Add actors to project
        role](#api-rest-api-3-project-projectIdOrKey-role-id-post).


        **[Permissions](#permissions) required:** *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project
        or *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setActors
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The ID of the project role. Use [Get all project
            roles](#api-rest-api-3-role-get) to get a list of project role IDs.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            example:
              categorisedActors:
                atlassian-group-role-actor-id:
                  - 952d12c3-5b5b-4d04-bb32-44d383afc4b2
                atlassian-user-role-actor:
                  - 12345678-9abc-def1-2345-6789abcdef12
            schema:
              $ref: '#/components/schemas/ProjectRoleActorsUpdateBean'
        description: >-
          The groups or users to associate with the project role for this
          project. Provide the user account ID, group name, or group ID. As a
          group's name can change, use of group ID is recommended.
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a
                project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}
              schema:
                $ref: '#/components/schemas/ProjectRole'
          description: >-
            Returned if the request is successful. The complete list of actors
            for the project is returned.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: >-
            Returned if the authentication credentials are incorrect or missing
            or if the calling user lacks administrative permissions for the
            project.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  a user or group is not found.
             *  a group or user is not active.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
        - {}
      summary: 'Set Actors For Project Role '
      tags:
        - Actors
        - Keys
        - Projects
        - REST
        - Roles
        - Sets
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - read:user:jira
            - read:group:jira
            - read:project-role:jira
            - read:project:jira
            - write:project-role:jira
            - read:avatar:jira
            - read:project-category:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectIdOrKey}/roledetails:
    get:
      deprecated: false
      description: >-
        Returns all [project
        roles](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/)
        and the details for each role. Note that the list of project roles is
        common to all projects.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectRoleDetails
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            Whether the roles should be filtered to include only those the user
            is assigned to.
          in: query
          name: currentMember
          schema:
            default: false
            type: boolean
        - in: query
          name: excludeConnectAddons
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","admin":false,"default":true,"roleConfigurable":true,"translatedName":"Developers"}]
              schema:
                items:
                  $ref: '#/components/schemas/ProjectRoleDetails'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or if the user does not have
            the necessary permissions for the project.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Role Details '
      tags:
        - Details
        - Keys
        - Projects
        - REST
        - Role Details
        - Roles
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-category:jira
            - read:project-role:jira
            - read:project:jira
            - read:avatar:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/statuses:
    get:
      deprecated: false
      description: >-
        Returns the valid statuses for a project. The statuses are grouped by
        issue type, as each project has a set of valid issue types and each
        issue type has a set of valid statuses.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getAllStatuses
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","statuses":[{"description":"The
                issue is currently being worked
                on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000"},{"description":"The
                issue is
                closed.","iconUrl":"https://your-domain.atlassian.net/images/icons/closed.gif","id":"5","name":"Closed","self":"https://your-domain.atlassian.net/rest/api/3/status/5"}],"subtask":false}]
              schema:
                items:
                  $ref: '#/components/schemas/IssueTypeWithStatus'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get All Statuses For Project '
      tags:
        - Keys
        - Projects
        - REST
        - Statuses
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-status:jira
            - read:issue-type:jira
            - read:status:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/version:
    get:
      deprecated: false
      description: >-
        Returns a [paginated](#pagination) list of all versions in a project.
        See the [Get project
        versions](#api-rest-api-3-project-projectIdOrKey-versions-get) resource
        if you want to get a full list of versions without pagination.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectVersionsPaginated
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          in: query
          name: maxResults
          schema:
            default: 50
            format: int32
            type: integer
        - description: |-
            [Order](#ordering) the results by a field:

             *  `description` Sorts by version description.
             *  `name` Sorts by version name.
             *  `releaseDate` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.
             *  `sequence` Sorts by the order of appearance in the user interface.
             *  `startDate` Sorts by start date, starting with the oldest date. Versions with no start date are listed last.
          in: query
          name: orderBy
          schema:
            enum:
              - description
              - '-description'
              - +description
              - name
              - '-name'
              - +name
              - releaseDate
              - '-releaseDate'
              - +releaseDate
              - sequence
              - '-sequence'
              - +sequence
              - startDate
              - '-startDate'
              - +startDate
            type: string
        - description: >-
            Filter the results using a literal string. Versions with matching
            `name` or `description` are returned (case insensitive).
          in: query
          name: query
          schema:
            type: string
        - description: >-
            A list of status values used to filter the results by version
            status. This parameter accepts a comma-separated list. The status
            values are `released`, `unreleased`, and `archived`.
          in: query
          name: status
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Expand
            options include:

             *  `issuesstatus` Returns the number of issues in each status category for each version.
             *  `operations` Returns actions that can be performed on the specified version.
             *  `driver` Returns the Atlassian account ID of the version driver.
             *  `approvers` Returns a list containing the approvers for this version.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"archived":false,"description":"An
                excellent version","id":"10000","name":"New Version
                1","overdue":true,"projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"},{"archived":false,"description":"Minor
                Bugfix
                version","id":"10010","issuesStatusForFixVersion":{"done":100,"inProgress":20,"toDo":10,"unmapped":0},"name":"Next
                Version","overdue":false,"projectId":10000,"released":false,"self":"https://your-domain.atlassian.net/rest/api/3/version/10010"}]}
              schema:
                $ref: '#/components/schemas/PageBeanVersion'
          description: Returned if the request is successful.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Versions Paginated '
      tags:
        - Keys
        - Paginated
        - Projects
        - REST
        - Versions
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-version:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectIdOrKey}/versions:
    get:
      deprecated: false
      description: >-
        Returns all versions in a project. The response is not paginated. Use
        [Get project versions
        paginated](#api-rest-api-3-project-projectIdOrKey-version-get) if you
        want to get the versions in a project with pagination.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectVersions
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectIdOrKey
          required: true
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts `operations`, which returns actions
            that can be performed on the version.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"archived":false,"description":"An excellent
                version","id":"10000","name":"New Version
                1","overdue":true,"projectId":10000,"releaseDate":1278385482288,"releaseDateSet":false,"released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","startDateSet":false,"userReleaseDate":"6/Jul/2010"},{"archived":false,"description":"Minor
                Bugfix
                version","id":"10010","issuesStatusForFixVersion":{"done":100,"inProgress":20,"toDo":10,"unmapped":0},"name":"Next
                Version","overdue":false,"projectId":10000,"releaseDateSet":false,"released":false,"self":"https://your-domain.atlassian.net/rest/api/3/version/10010","startDateSet":false}]
              schema:
                items:
                  $ref: '#/components/schemas/Version'
                type: array
          description: Returned if the request is successful.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Versions '
      tags:
        - Keys
        - Projects
        - REST
        - Versions
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-version:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectId}/email:
    get:
      deprecated: false
      description: >-
        Returns the [project's sender email
        address](https://confluence.atlassian.com/x/dolKLg).


        **[Permissions](#permissions) required:** *Browse projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectEmail
      parameters:
        - description: The project ID.
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"emailAddress":"jira@example.customdomain.com","emailAddressStatus":["Email
                address or domain not verified."]}
              schema:
                $ref: '#/components/schemas/ProjectEmailAddress'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: Returned if the user does not have permission to read project.
        '404':
          description: >-
            Returned if the project or project's sender email address is not
            found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Get Project''s Sender Email '
      tags:
        - Emails
        - Project's
        - Projects
        - REST
        - Sender
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project.email:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Sets the [project's sender email
        address](https://confluence.atlassian.com/x/dolKLg).


        If `emailAddress` is an empty string, the default email address is
        restored.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        Projects* [project
        permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: updateProjectEmail
      parameters:
        - description: The project ID.
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            example:
              emailAddress: jira@example.atlassian.net
            schema:
              $ref: '#/components/schemas/ProjectEmailAddress'
        description: The project's sender email address to be set.
        required: true
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the project's sender email address is successfully set.
        '400':
          description: >-
            Returned if the request is not valid, if the email address is not
            valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the user does not have permission to administer the
            project.
        '404':
          description: Returned if the project is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Set Project''s Sender Email '
      tags:
        - Emails
        - Project's
        - Projects
        - REST
        - Sender
        - Sets
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - write:project.email:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectId}/hierarchy:
    get:
      deprecated: false
      description: >-
        Get the issue type hierarchy for a next-gen project.


        The issue type hierarchy for a project consists of:

         *  *Epic* at level 1 (optional).
         *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.
         *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.

        **[Permissions](#permissions) required:** *Browse projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getHierarchy
      parameters:
        - description: The ID of the project.
          in: path
          name: projectId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"hierarchy":[{"issueTypes":[{"avatarId":10324,"entityId":"ce32639b-8911-4689-81da-65681f451516","id":10008,"name":"Story"},{"avatarId":10324,"entityId":"ffdbced5-fbfc-4370-a848-94e2ce3751af","id":10001,"name":"Bug"}],"level":0,"name":"Base"},{"issueTypes":[{"avatarId":10179,"entityId":"80f20d47-34dc-4680-8937-936b7e762a35","id":10007,"name":"Epic"}],"level":1,"name":"Epic"},{"issueTypes":[{"avatarId":10573,"entityId":"210b4879-15cc-414c-9746-f8f6b6be0a72","id":10009,"name":"Subtask"}],"level":-1,"name":"Subtask"}],"projectId":10030}
              schema:
                $ref: '#/components/schemas/ProjectIssueTypeHierarchy'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user does not have the
            necessary permission.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get Project Issue Type Hierarchy '
      tags:
        - Hierarchy
        - Issues
        - Projects
        - REST
        - Types
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-type:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectKeyOrId}/issuesecuritylevelscheme:
    get:
      deprecated: false
      description: >-
        Returns the [issue security
        scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the
        project.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or the
        *Administer Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getProjectIssueSecurityScheme
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"defaultSecurityLevelId":10021,"description":"Description for
                the default issue security
                scheme","id":10000,"levels":[{"description":"Only the reporter
                and internal staff can see this
                issue.","id":"10021","name":"Reporter
                Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021"}],"name":"Default
                Issue Security
                Scheme","self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000"}
              schema:
                $ref: '#/components/schemas/SecurityScheme'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the project is visible to the user but the user doesn't
            have administrative permissions.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get Project Issue Security Scheme '
      tags:
        - Issue Security Level Scheme
        - Issues
        - Keys
        - Projects
        - REST
        - Schemes
        - Security
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-security-level:jira
            - read:issue-security-scheme:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectKeyOrId}/notificationscheme:
    get:
      deprecated: false
      description: >-
        Gets a [notification scheme](https://confluence.atlassian.com/x/8YdKLg)
        associated with the project.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        Projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getNotificationSchemeForProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Expand
            options include:

             *  `all` Returns all expandable information
             *  `field` Returns information about any custom fields assigned to receive an event
             *  `group` Returns information about any groups assigned to receive an event
             *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
             *  `projectRole` Returns information about any project roles assigned to receive an event
             *  `user` Returns information about any users assigned to receive an event
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"description":"description","expand":"notificationSchemeEvents,user,group,projectRole,field,all","id":10100,"name":"notification
                scheme
                name","notificationSchemeEvents":[{"event":{"description":"Event
                published when an issue is created","id":1,"name":"Issue
                created"},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom
                field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom
                field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom
                field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]},{"event":{"description":"Custom
                event that is published together with an issue created
                event","id":20,"name":"Custom
                event","templateEvent":{"description":"Event published when an
                issue is created","id":1,"name":"Issue
                created"}},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom
                field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom
                field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom
                field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]}],"projects":[10001,10002],"self":"https://your-domain.atlassian.net/rest/api/3/notificationscheme"}
              schema:
                $ref: '#/components/schemas/NotificationScheme'
          description: Returned if the request is successful.
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: >-
            Returned if the project is not found or the user is not an
            administrator.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get Project Notification Scheme '
      tags:
        - Keys
        - Notifications
        - Notificationscheme
        - Projects
        - REST
        - Schemes
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:project-category:jira
            - read:project-role:jira
            - read:project:jira
            - read:user:jira
            - read:group:jira
            - read:field:jira
            - read:avatar:jira
            - read:field-configuration:jira
            - read:notification-scheme:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/project/{projectKeyOrId}/permissionscheme:
    get:
      deprecated: false
      description: >-
        Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg)
        associated with the project.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer
        projects* [project
        permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getAssignedPermissionScheme
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Note that
            permissions are included when you specify any value. Expand options
            include:

             *  `all` Returns all expandable information.
             *  `field` Returns information about the custom field granted the permission.
             *  `group` Returns information about the group that is granted the permission.
             *  `permissions` Returns all permission grants for each permission scheme.
             *  `projectRole` Returns information about the project role granted the permission.
             *  `user` Returns information about the user who is granted the permission.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"description":"description","id":10000,"name":"Example
                permission
                scheme","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}
              schema:
                $ref: '#/components/schemas/PermissionScheme'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: >-
            Returned if the user does not have permission to view the project's
            configuration.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view the project.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
      summary: 'Get Assigned Permission Scheme '
      tags:
        - Assigned
        - Keys
        - Permission
        - Permission Schemes
        - Projects
        - REST
        - Schemes
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:application-role:jira
            - read:field:jira
            - read:group:jira
            - read:permission-scheme:jira
            - read:permission:jira
            - read:project-role:jira
            - read:user:jira
            - read:avatar:jira
            - read:project-category:jira
            - read:project:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Assigns a permission scheme with a project. See [Managing project
        permissions](https://confluence.atlassian.com/x/yodKLg) for more
        information about permission schemes.


        **[Permissions](#permissions) required:** *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg)
      operationId: assignPermissionScheme
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
        - description: >-
            Use [expand](#expansion) to include additional information in the
            response. This parameter accepts a comma-separated list. Note that
            permissions are included when you specify any value. Expand options
            include:

             *  `all` Returns all expandable information.
             *  `field` Returns information about the custom field granted the permission.
             *  `group` Returns information about the group that is granted the permission.
             *  `permissions` Returns all permission grants for each permission scheme.
             *  `projectRole` Returns information about the project role granted the permission.
             *  `user` Returns information about the user who is granted the permission.
          in: query
          name: expand
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              id: 10000
            schema:
              $ref: '#/components/schemas/IdBean'
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"description":"description","id":10000,"name":"Example
                permission
                scheme","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}
              schema:
                $ref: '#/components/schemas/PermissionScheme'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '403':
          description: |-
            Returned if:

             *  the user does not have the necessary permission to edit the project's configuration.
             *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.
        '404':
          description: Returned if the project or permission scheme is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - manage:jira-project
      summary: 'Assign Permission Scheme '
      tags:
        - Assign
        - Keys
        - Permission
        - Permission Schemes
        - Projects
        - REST
        - Schemes
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - manage:jira-project
          state: Current
        - scheme: OAuth2
          scopes:
            - read:application-role:jira
            - read:field:jira
            - read:group:jira
            - read:permission-scheme:jira
            - read:permission:jira
            - read:project-role:jira
            - read:user:jira
            - write:project:jira
            - read:avatar:jira
            - read:project-category:jira
            - read:project:jira
          state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /rest/api/3/project/{projectKeyOrId}/securitylevel:
    get:
      deprecated: false
      description: >-
        Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg)
        levels for the project that the user has access to.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** *Browse projects* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) for the project,
        however, issue security levels are only returned for authenticated user
        with *Set Issue Security* [global
        permission](https://confluence.atlassian.com/x/x4dKLg) for the project.
      operationId: getSecurityLevelsForProject
      parameters:
        - description: The project ID or project key (case sensitive).
          in: path
          name: projectKeyOrId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"levels":[{"description":"Only the reporter and internal staff
                can see this issue.","id":"100000","name":"Reporter
                Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/100000"},{"description":"Only
                internal staff can see this issue.","id":"100001","name":"Staff
                Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/100001"}]}
              schema:
                $ref: '#/components/schemas/ProjectIssueSecurityLevels'
          description: Returned if the request is successful.
        '404':
          description: >-
            Returned if the project is not found or the user does not have
            permission to view it.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Project Issue Security Levels '
      tags:
        - Issues
        - Keys
        - Levels
        - Projects
        - REST
        - Security
        - Security Levels
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:issue-security-level:jira
          state: Beta
      x-atlassian-connect-scope: READ
servers:
  - url: https://your-domain.atlassian.net
tags: []
x-atlassian-narrative:
  documents:
    - anchor: about
      body: >-
        The Jira REST API enables you to interact with Jira programmatically.
        Use this API to 

        [build
        apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/),
        script interactions with 

        Jira, or develop any other type of integration. This page documents the
        REST resources available in Jira Cloud, including 

        the HTTP response codes and example requests and responses.
      title: About
    - anchor: version
      body: >
        This documentation is for **version 3** of the Jira Cloud platform REST
        API, which is the latest version

        but is in **beta**. [Version
        2](https://developer.atlassian.com/cloud/jira/platform/rest/v2/) and 

        version 3 of the API offer the same collection of operations. However,
        version 3 provides support for 

        the [Atlassian Document
        Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) 

        (ADF) in: 

        - `body` in comments, including where comments are used in issue, issue
        link, and transition resources.

        - `comment` in worklogs.

        - `description` and `environment` fields in issues.

        - `textarea` type custom fields (multi-line text fields) in issues.
        Single line custom fields 
          (`textfield`) accept a string and don't handle Atlassian Document Format content.

        However, these new features are under development and may change.
      title: Version
    - anchor: authentication
      body: >
        ### Forge apps


        For Forge apps, [REST API
        scopes](https://developer.atlassian.com/cloud/jira/platform/scopes-for-oauth-2-3LO-and-forge-apps/) 

        are used when authenticating with Jira Cloud platform. See [Add scopes
        to call an Atlassian REST
        API](https://developer.atlassian.com/platform/forge/add-scopes-to-call-an-atlassian-rest-api/)
        for more details.


        The URIs for Forge app REST API calls have this structure:


        `/rest/api/3/<resource-name>`


        For example, `/rest/api/3/issue/DEMO-1`


        ### Connect apps


        For Connect apps, authentication (JWT-based) is built into the Connect
        libraries. Authorization is implemented using either 

        scopes (shown as _App scope required_ for operations on this page) or
        user impersonation. See 

        [Security for Connect
        apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/) 

        for details.


        The URIs for Connect app REST API calls have this structure:


        `https://<site-url>/rest/api/3/<resource-name>`


        For example, `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`


        ### Other integrations


        For integrations that are not Forge or Connect apps, use OAuth 2.0
        authorization code grants (3LO) for security 

        (3LO scopes are shown as for operations _OAuth scopes required_). See 

        [OAuth 2.0 (3LO)
        apps](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps/) 

        for details.


        The URIs for OAuth 2.0 (3LO) app REST API calls have this structure:


        `https://api.atlassian.com/ex/jira/<cloudId>/rest/api/3/<resource-name>`


        For example,
        `https://api.atlassian.com/ex/jira/35273b54-3f06-40d2-880f-dd28cf8daafa/rest/api/3/issue/DEMO-1`


        ### Ad-hoc API calls


        For personal scripts, bots, and ad-hoc execution of the REST APIs use
        basic authentication. See [Basic auth for REST
        APIs](https://developer.atlassian.com/cloud/jira/platform/basic-auth-for-rest-apis/)
        for details. 


        The URIs for basic authentication REST API calls have this structure:


        `https://<site-url>/rest/api/3/<resource-name>`


        For example, `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`
      title: Authentication and authorization
    - anchor: permissions
      body: >
        ### Operation permissions


        Most operations in this API require permissions. The calling user must
        have the required permissions for an operation to 

        use it. Note that for Connect apps, the app user must have the required
        permissions for the operation and the app must 

        have scopes that permit the operation.


        A permission can be granted to a group, project role, or issue role that
        the user is a member of, or granted directly to a user. 

        See [Permissions overview](https://confluence.atlassian.com/x/FQiiLQ)
        for details. The most common permissions are:


        - **Administer the Cloud site**: Users in the _site-admins_ group have
        this 

        permission. See [Manage
        groups](https://confluence.atlassian.com/x/24xjL) for details.

        - **Administer Jira**: Granted by the _Jira Administrators_ global
        permission. There is a default group for this permission. 

        See [Manage groups](https://confluence.atlassian.com/x/24xjL) and
        [Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)
        for details.

        - **Administer a project in Jira**: Granted by the _Administer projects_
        project permission for a project. This can be 

        granted to a user, a group, a project role, and more. 

        See [Managing project
        permissions](https://confluence.atlassian.com/x/yodKLg) for details.

        - **Access a project in Jira**: Granted by the _Browse projects_ project
        permission for a project. This can be 

        granted to a user, a group, a project role, and more. 

        See [Managing project
        permissions](https://confluence.atlassian.com/x/yodKLg) for details.

        - **Access Jira**: Granted by the _Jira Users_ global permission. Users
        in the default product access group (for example, 

        _jira-software-users-acmesite_) have this permission. 

        See [Manage groups](https://confluence.atlassian.com/x/24xjL) and 

        [Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)
        for details.


        ### Anonymous access


        Some operations provide support for anonymous access. However, anonymous
        access is only available if 

        the Jira permission needed to access the object or records returned by
        the operation is granted to 

        the _Public_ group. See [Allowing anonymous access to your
        project](https://confluence.atlassian.com/x/GDxxLg) 

        for details.


        If an operation is called anonymously and anonymous access is not
        available, the operation will return 

        an error. Note that not all operations that correspond to objects that
        can be given public access 

        provide for anonymous access.
      title: Permissions
    - anchor: expansion
      body: >+
        ### Expansion


        The Jira REST API uses resource expansion, which means that some parts
        of a resource are not returned unless specified 

        in the request. This simplifies responses and minimizes network traffic.


        To expand part of a resource in a request, use the expand query
        parameter and specify the object(s) to be expanded. 

        If you need to expand nested objects, use the `.` dot notation. If you
        need to expand multiple objects, use a 

        comma-separated list. 


        For example, the following request expands the `names` and
        `renderedFields` properties for the _JRACLOUD-34423_ issue:


        `GET issue/JRACLOUD-34423?expand=names,renderedFields`


        To discover which object can be expanded, refer to the `expand` property
        in the object. 

        In the JSON example below, the resource declares `widgets` as
        expandable.


        ```json

        {
          "expand": "widgets", 
          "self": "https://your-domain.atlassian.net/rest/api/3/resource/KEY-1", 
          "widgets": {
            "widgets": [],
            "size": 5
           }
        }

        ```


        ### Pagination


        The Jira REST API uses pagination to improve performance. Pagination is
        enforced for operations that could return a large 

        collection of items. When you make a request to a paginated resource,
        the response wraps the returned array of values in 

        a JSON object with paging metadata. For example:


        ```json

        {
            "startAt" : 0,
            "maxResults" : 10,
            "total": 200,
            "isLast": false,
            "values": [
                { /* result 0 */ },
                { /* result 1 */ },
                { /* result 2 */ }
            ]
        }

        ```


        *   `startAt` is the index of the first item returned in the page.

        *   `maxResults` is the maximum number of items that a page can return.
        Each operation can have a different limit for
            the number of items returned, and these limits may change without notice. To find the maximum number of items 
            that an operation could return, set `maxResults` to a large number—for example, over 1000—and if the returned value of `maxResults` is less than the requested value, the returned value is the maximum.
        *    `total` is the total number of items contained in all pages. This
        number **_may change_** as the client 

        requests the subsequent pages, therefore the client should always assume
        that the requested page can be empty. Note 

        that this property is not returned for all operations.

        *   `isLast` indicates whether the page returned is the last one. Note
        that this property is not returned for all operations.


        ### Ordering


        Some operations support ordering the elements of a response by a field.
        Check the documentation for the operation to 

        confirm whether ordering of a response is supported and which fields can
        be used. Responses are listed in ascending order 

        by default. You can change the order using the `orderby` query parameter
        with a `-` or `+` symbol. For example:


        *   `?orderBy=name` to order by `name` field ascending.

        *   `?orderBy=+name` to order by `name` field ascending.

        *   `?orderBy=-name` to order by `name` field descending.


      title: Expansion, pagination, and ordering
    - anchor: timestamps
      body: >
        By default, top-level timestamps (e.g. updated and created) are returned
        in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format, in the system
        default user time zone.


        To return date time data in the logged in user's timezone, please refer
        to `renderedFields` property under the `expand` query parameter in
        relevant APIs.
      title: Timestamps
    - anchor: special-request-headers
      body: >-
        The following request and response headers define important metadata for
        the Jira Cloud REST API resources.


        -   `X-Atlassian-Token` (request): Operations that accept
        multipart/form-data must include the `X-Atlassian-Token: no-check`

        header in requests. Otherwise the request is blocked by cross-site
        request forgery (CSRF/XSRF) protection.

        -   `X-Force-Accept-Language` (request): controls how the standard HTTP
        `Accept-Language` header is processed.

        By default `Accept-Language` is ignored and the response is in the
        language configured in the user's profile or,

        when no language is configured for the user, the default Jira instance
        language. For the response to recognize

        `Accept-Language` send `X-Force-Accept-Language = true` as well. If
        `Accept-Language` requests a language that Jira

        can return the response is in that language, otherwise Jira returns the
        response in the default language. If

        `Accept-Language` is not specified the response is in the default
        language.

        -   `X-AAccountId` (response): This response header contains the
        Atlassian account ID of the authenticated user.
      title: Special headers
    - anchor: anonymous-operations
      body: |2-
         Jira provides for all permissions, except the [global permission](https://confluence.atlassian.com/x/x4dKLg) Administer Jira, to be assigned to *Anyone*. Once a permission is assigned to *Anyone*, anyone knowing a project's URL is able to use the features in Jira enabled by the permission. However, the Jira REST API does not enable anonymous access for operations by default. This means that an anonymous user who may be able to perform an action through Jira, may not be able to perform the same action where it's enabled by the REST API. 

         The operations that provide anonymous access are annotated "This operation can be accessed anonymously."
      title: Anonymous operations
    - anchor: async-operations
      body: >-
        Some Jira REST API operations may trigger long-running or
        computationally expensive tasks. In these cases, the operation 

        will schedule an asynchronous task and return a `303 (See Other)`
        response, indicating the location of the queued task 

        in the `Location` header. You can query this task to get progress
        updates.


        When the task finishes, the response object will contain the `result`
        field. The content of the field is specific to the 

        operation that created the task. Refer to the operation’s documentation
        for more information.


        Note that asynchronous tasks are not guaranteed to be run in order. In
        other words, if you need your tasks to execute 

        in a certain order, you should start a task only after the prerequisite
        task(s) have finished.
      title: Asynchronous operations
    - anchor: experimental
      body: >
        Features and methods marked as experimental may change without notice.
        Feedback on experimental functionality is welcome. 

        Report your suggestions and bugs in the [ACJIRA
        project](https://ecosystem.atlassian.net/projects/ACJIRA) (preferred) or
        use the 

        **Give docs feedback** link at the top of this page. 
      title: Experimental features
    - anchor: status-codes
      body: >-
        The Jira Cloud platform REST API uses the [standard HTTP status
        codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).


        Operations that return an error status code may also return a response
        body containing details of the error or errors. 

        The schema for the response body is shown below:



        ```json

        {
          "id": "https://docs.atlassian.com/jira/REST/schema/error-collection#",
          "title": "Error Collection",
          "type": "object",
          "properties": {
            "errorMessages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "errors": {
              "type": "object",
              "patternProperties": {
                ".+": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "status": { 
              "type": "integer"
            }
          },
          "additionalProperties": false
        }

        ```
      title: Status codes
