components:
  schemas:
    DefaultShareScope:
      additionalProperties: false
      description: >-
        Details of the scope of the default sharing for new filters and
        dashboards.
      properties:
        scope:
          description: |-
            The scope of the default sharing for new filters and dashboards:

             *  `AUTHENTICATED` Shared with all logged-in users.
             *  `GLOBAL` Shared with all logged-in users. This shows as `AUTHENTICATED` in the response.
             *  `PRIVATE` Not shared with any users.
          enum:
            - GLOBAL
            - AUTHENTICATED
            - PRIVATE
          type: string
      required:
        - scope
      type: object
      xml:
        name: defaultShareScope
    PageBeanFilterDetails:
      additionalProperties: false
      description: A page of items.
      properties:
        isLast:
          description: Whether this is the last page.
          readOnly: true
          type: boolean
        maxResults:
          description: The maximum number of items that could be returned.
          format: int32
          readOnly: true
          type: integer
        nextPage:
          description: If there is another page of results, the URL of the next page.
          format: uri
          readOnly: true
          type: string
        self:
          description: The URL of the page.
          format: uri
          readOnly: true
          type: string
        startAt:
          description: The index of the first item returned.
          format: int64
          readOnly: true
          type: integer
        total:
          description: The number of items returned.
          format: int64
          readOnly: true
          type: integer
        values:
          description: The list of items.
          items:
            $ref: '#/components/schemas/FilterDetails'
          readOnly: true
          type: array
      type: object
    Filter:
      additionalProperties: false
      description: Details about a filter.
      properties:
        approximateLastUsed:
          description: >-
            \[Experimental\] Approximate last used time. Returns the date and
            time when the filter was last used. Returns `null` if the filter
            hasn't been used after tracking was enabled. For performance
            reasons, timestamps aren't updated in real time and therefore may
            not be exactly accurate.
          format: date-time
          readOnly: true
          type: string
        description:
          description: A description of the filter.
          type: string
        editPermissions:
          description: The groups and projects that can edit the filter.
          items:
            $ref: '#/components/schemas/SharePermission'
          type: array
        favourite:
          description: Whether the filter is selected as a favorite.
          type: boolean
        favouritedCount:
          description: >-
            The count of how many users have selected this filter as a favorite,
            including the filter owner.
          format: int64
          readOnly: true
          type: integer
        id:
          description: The unique identifier for the filter.
          readOnly: true
          type: string
        jql:
          description: >-
            The JQL query for the filter. For example, *project = SSP AND
            issuetype = Bug*.
          type: string
        name:
          description: The name of the filter. Must be unique.
          type: string
        owner:
          allOf:
            - $ref: '#/components/schemas/User'
          description: >-
            The user who owns the filter. This is defaulted to the creator of
            the filter, however Jira administrators can change the owner of a
            shared filter in the admin settings.
          readOnly: true
        searchUrl:
          description: >-
            A URL to view the filter results in Jira, using the [Search for
            issues using JQL](#api-rest-api-3-filter-search-get) operation with
            the filter's JQL string to return the filter results. For example,
            *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*.
          format: uri
          readOnly: true
          type: string
        self:
          description: The URL of the filter.
          format: uri
          readOnly: true
          type: string
        sharePermissions:
          description: The groups and projects that the filter is shared with.
          items:
            $ref: '#/components/schemas/SharePermission'
          type: array
        sharedUsers:
          allOf:
            - $ref: '#/components/schemas/UserList'
          description: >-
            A paginated list of the users that the filter is shared with. This
            includes users that are members of the groups or can browse the
            projects that the filter is shared with.
          readOnly: true
        subscriptions:
          allOf:
            - $ref: '#/components/schemas/FilterSubscriptionsList'
          description: A paginated list of the users that are subscribed to the filter.
          readOnly: true
        viewUrl:
          description: >-
            A URL to view the filter results in Jira, using the ID of the
            filter. For example,
            *https://your-domain.atlassian.net/issues/?filter=10100*.
          format: uri
          readOnly: true
          type: string
      required:
        - name
      type: object
      xml:
        name: filter
    SharePermission:
      additionalProperties: false
      description: Details of a share permission for the filter.
      properties:
        group:
          allOf:
            - $ref: '#/components/schemas/GroupName'
          description: >-
            The group that the filter is shared with. For a request, specify the
            `groupId` or `name` property for the group. As a group's name can
            change, use of `groupId` is recommended.
        id:
          description: The unique identifier of the share permission.
          format: int64
          readOnly: true
          type: integer
        project:
          allOf:
            - $ref: '#/components/schemas/Project'
          description: >-
            The project that the filter is shared with. This is similar to the
            project object returned by [Get
            project](#api-rest-api-3-project-projectIdOrKey-get) but it contains
            a subset of the properties, which are: `self`, `id`, `key`,
            `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`,
            `simplified`.  

            For a request, specify the `id` for the project.
        role:
          allOf:
            - $ref: '#/components/schemas/ProjectRole'
          description: >-
            The project role that the filter is shared with.  

            For a request, specify the `id` for the role. You must also specify
            the `project` object and `id` for the project that the role is in.
        type:
          description: |-
            The type of share permission:

             *  `user` Shared with a user.
             *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.
             *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.
             *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.
             *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.
             *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.
             *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request.
          enum:
            - user
            - group
            - project
            - projectRole
            - global
            - loggedin
            - authenticated
            - project-unknown
          type: string
        user:
          allOf:
            - $ref: '#/components/schemas/UserBean'
          description: >-
            The user account ID that the filter is shared with. For a request,
            specify the `accountId` property for the user.
      required:
        - type
      type: object
externalDocs:
  description: Find out more about Atlassian products and services.
  url: http://www.atlassian.com
info:
  contact:
    email: ecosystem@atlassian.com
  description: Needs description.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://atlassian.com/terms/
  title: ' rest/api/3/filter/'
  version: 1001.0.0-SNAPSHOT-67b5c6e5f3598d7ec1649016d026468ab2838a77
openapi: 3.0.1
paths:
  /rest/api/3/filter/defaultShareScope:
    get:
      deprecated: false
      description: >-
        Returns the default sharing settings for new filters and dashboards for
        a user.


        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getDefaultShareScope
      parameters: []
      responses:
        '200':
          content:
            application/json:
              example: '{"scope":"GLOBAL"}'
              schema:
                $ref: '#/components/schemas/DefaultShareScope'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Default Share Scope '
      tags:
        - Default
        - Filter
        - REST
        - Scopes
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter.default-share-scope:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: |-
        Sets the default sharing for new filters and dashboards for a user.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: setDefaultShareScope
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              scope: GLOBAL
            schema:
              $ref: '#/components/schemas/DefaultShareScope'
        required: true
      responses:
        '200':
          content:
            application/json:
              example: '{"scope":"GLOBAL"}'
              schema:
                $ref: '#/components/schemas/DefaultShareScope'
          description: Returned if the request is successful.
        '400':
          description: Returned if an invalid scope is set.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Set Default Share Scope '
      tags:
        - Default
        - Filter
        - REST
        - Scopes
        - Sets
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter.default-share-scope:jira
            - read:filter.default-share-scope:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/favourite:
    get:
      deprecated: false
      description: >-
        Returns the visible favorite filters of the user.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** A favorite filter is only
        visible to the user where the filter is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.

        For example, if the user favorites a public filter that is subsequently
        made private that filter is not returned by this operation.
      operationId: getFavouriteFilters
      parameters:
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to
                me","favourite":true,"favouritedCount":0,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My
                issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]
              schema:
                items:
                  $ref: '#/components/schemas/Filter'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Favorite Filters '
      tags:
        - Favorite
        - Favourite
        - Filter
        - Filters
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/filter/my:
    get:
      deprecated: false
      description: >-
        Returns the filters owned by the user. If `includeFavourites` is `true`,
        the user's visible favorite filters are also returned.


        **[Permissions](#permissions) required:** Permission to access Jira,
        however, a favorite filters is only visible to the user where the filter
        is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.

        For example, if the user favorites a public filter that is subsequently
        made private that filter is not returned by this operation.
      operationId: getMyFilters
      parameters:
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
        - description: Include the user's favorite filters in the response.
          in: query
          name: includeFavourites
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to
                me","favourite":true,"favouritedCount":0,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My
                issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]
              schema:
                items:
                  $ref: '#/components/schemas/Filter'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get My Filters '
      tags:
        - Filter
        - Filters
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/filter/search:
    get:
      deprecated: false
      description: >-
        Returns a [paginated](#pagination) list of filters. Use this operation
        to get:

         *  specific filters, by defining `id` only.
         *  filters that match all of the specified attributes. For example, all filters for a user with a particular word in their name. When multiple attributes are specified only filters matching all attributes are returned.

        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None, however, only the
        following filters that match the query parameters are returned:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getFiltersPaginated
      parameters:
        - description: String used to perform a case-insensitive partial match with `name`.
          in: query
          name: filterName
          schema:
            type: string
        - description: >-
            User account ID used to return filters with the matching
            `owner.accountId`. This parameter cannot be used with `owner`.
          in: query
          name: accountId
          schema:
            maxLength: 128
            minLength: 0
            type: string
        - description: >-
            This parameter is deprecated because of privacy changes. Use
            `accountId` instead. See the [migration
            guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details. User name used to return filters with the matching
            `owner.name`. This parameter cannot be used with `accountId`.
          in: query
          name: owner
          schema:
            type: string
        - description: >-
            As a group's name can change, use of `groupId` is recommended to
            identify a group. Group name used to returns filters that are shared
            with a group that matches `sharePermissions.group.groupname`. This
            parameter cannot be used with the `groupId` parameter.
          in: query
          name: groupname
          schema:
            type: string
        - description: >-
            Group ID used to returns filters that are shared with a group that
            matches `sharePermissions.group.groupId`. This parameter cannot be
            used with the `groupname` parameter.
          in: query
          name: groupId
          schema:
            type: string
        - description: >-
            Project ID used to returns filters that are shared with a project
            that matches `sharePermissions.project.id`.
          in: query
          name: projectId
          schema:
            format: int64
            type: integer
        - description: >-
            The list of filter IDs. To include multiple IDs, provide an
            ampersand-separated list. For example, `id=10000&id=10001`. Do not
            exceed 200 filter IDs.
          in: query
          name: id
          schema:
            items:
              format: int64
              type: integer
            type: array
            uniqueItems: true
        - description: |-
            [Order](#ordering) the results by a field:

             *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.
             *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.
             *  `is_favourite` Sorts by whether the filter is marked as a favorite.
             *  `id` Sorts by filter ID.
             *  `name` Sorts by filter name.
             *  `owner` Sorts by the ID of the filter owner.
             *  `is_shared` Sorts by whether the filter is shared.
          in: query
          name: orderBy
          schema:
            default: name
            enum:
              - description
              - '-description'
              - +description
              - favourite_count
              - '-favourite_count'
              - +favourite_count
              - id
              - '-id'
              - +id
              - is_favourite
              - '-is_favourite'
              - +is_favourite
              - name
              - '-name'
              - +name
              - owner
              - '-owner'
              - +owner
              - is_shared
              - '-is_shared'
              - +is_shared
            type: string
        - description: >-
            The index of the first item to return in a page of results (page
            offset).
          in: query
          name: startAt
          schema:
            default: 0
            format: int64
            type: integer
        - description: The maximum number of items to return per page.
          in: query
          name: maxResults
          schema:
            default: 50
            format: int32
            type: integer
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `description` Returns the description of the filter.
             *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.
             *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.
             *  `jql` Returns the JQL query that the filter uses.
             *  `owner` Returns the owner of the filter.
             *  `searchUrl` Returns a URL to perform the filter's JQL query.
             *  `sharePermissions` Returns the share permissions defined for the filter.
             *  `editPermissions` Returns the edit permissions defined for the filter.
             *  `isWritable` Returns whether the current user has permission to edit the filter.
             *  `approximateLastUsed` \[Experimental\] Returns the approximate date and time when the filter was last evaluated.
             *  `subscriptions` Returns the users that are subscribed to the filter.
             *  `viewUrl` Returns a URL to view the filter.
          in: query
          name: expand
          schema:
            type: string
        - description: >-
            EXPERIMENTAL: Whether share permissions are overridden to enable
            filters with any share permissions to be returned. Available to
            users with *Administer Jira* [global
            permission](https://confluence.atlassian.com/x/x4dKLg).
          in: query
          name: overrideSharePermissions
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"isLast":true,"maxResults":100,"self":"https://your-domain.atlassian.net/rest/api/3/filter/search?accountId=&maxResults=50&filterName=&orderBy=name&startAt=0&expand=description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,subscriptions,approximateLastUsed","startAt":0,"total":2,"values":[{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","editPermissions":[],"expand":"description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,approximateLastUsed,subscriptions","favourite":false,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":[],"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to
                me","editPermissions":[{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}],"expand":"description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,approximateLastUsed,subscriptions","favourite":true,"favouritedCount":123,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My
                issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":[{"id":1,"user":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}}],"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]}
              schema:
                $ref: '#/components/schemas/PageBeanFilterDetails'
          description: Returned if the request is successful.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
          description: |-
            Returned if:

             *  `owner` and `accountId` are provided.
             *  `expand` includes an invalid value.
             *  `orderBy` is invalid.
             *  `id` identifies more than 200 filter IDs.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Search For Filters '
      tags:
        - Filter
        - Filters
        - REST
        - Search
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: READ
  /rest/api/3/filter/{id}:
    delete:
      deprecated: false
      description: >-
        Delete a filter.


        **[Permissions](#permissions) required:** Permission to access Jira,
        however filters can only be deleted by the creator of the filter or a
        user with *Administer Jira* [global
        permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteFilter
      parameters:
        - description: The ID of the filter to delete.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '204':
          description: Returned if the request is successful.
        '400':
          description: Returned if the filter is not found.
        '401':
          description: Returned if the user does not have permission to delete the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Delete Filter '
      tags:
        - Filter
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - delete:filter:jira
          state: Beta
      x-atlassian-connect-scope: DELETE
    get:
      deprecated: false
      description: >-
        Returns a filter.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None, however, the filter is
        only returned where it is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.
      operationId: getFilter
      parameters:
        - description: The ID of the filter to return.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
        - description: >-
            EXPERIMENTAL: Whether share permissions are overridden to enable
            filters with any share permissions to be returned. Available to
            users with *Administer Jira* [global
            permission](https://confluence.atlassian.com/x/x4dKLg).
          in: query
          name: overrideSharePermissions
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}
              schema:
                $ref: '#/components/schemas/Filter'
          description: Returned if the request is successful.
        '400':
          description: >-
            Returned if the filter is not found or the user does not have
            permission to view it.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Filter '
      tags:
        - Filter
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Updates a filter. Use this operation to update a filter's name,
        description, JQL, or sharing.


        **[Permissions](#permissions) required:** Permission to access Jira,
        however the user must own the filter.
      operationId: updateFilter
      parameters:
        - description: The ID of the filter to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
        - description: >-
            EXPERIMENTAL: Whether share permissions are overridden to enable the
            addition of any share permissions to filters. Available to users
            with *Administer Jira* [global
            permission](https://confluence.atlassian.com/x/x4dKLg).
          in: query
          name: overrideSharePermissions
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            example:
              description: Lists all open bugs
              jql: type = Bug and resolution is empty
              name: All Open Bugs
            schema:
              $ref: '#/components/schemas/Filter'
        description: The filter to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}
              schema:
                $ref: '#/components/schemas/Filter'
          description: Returned if the request is successful.
        '400':
          description: >-
            Returned if the request object is invalid. For example, the `name`
            is not unique or the project ID is not specified for a project role
            share permission.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Update Filter '
      tags:
        - Filter
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter:jira
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/{id}/columns:
    delete:
      deprecated: false
      description: >-
        Reset the user's column configuration for the filter to the default.


        **[Permissions](#permissions) required:** Permission to access Jira,
        however, columns are only reset for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: resetColumns
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '204':
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Reset Columns '
      tags:
        - Columns
        - Filter
        - REST
        - Reset
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - delete:filter.column:jira
          state: Beta
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
      x-atlassian-connect-scope: DELETE
    get:
      deprecated: false
      description: >-
        Returns the columns configured for a filter. The column configuration is
        used when the filter's results are viewed in *List View* with the
        *Columns* set to *Filter*.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None, however, column details
        are only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getColumns
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"label":"Key","value":"issuekey"},{"label":"Summary","value":"summary"}]
              schema:
                items:
                  $ref: '#/components/schemas/ColumnItem'
                type: array
          description: Returned if the request is successful.
        '400':
          description: Returned if the user does not have permission to view the filter.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: Returned if a column configuration is not set for the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Columns '
      tags:
        - Columns
        - Filter
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter.column:jira
          state: Beta
      x-atlassian-connect-scope: READ
    put:
      deprecated: false
      description: >-
        Sets the columns for a filter. Only navigable fields can be set as
        columns. Use [Get fields](#api-rest-api-3-field-get) to get the list
        fields in Jira. A navigable field has `navigable` set to `true`.


        The parameters for this resource are expressed as HTML form data. For
        example, in curl:


        `curl -X PUT -d columns=summary -d columns=description
        https://your-domain.atlassian.net/rest/api/3/filter/10000/columns`


        **[Permissions](#permissions) required:** Permission to access Jira,
        however, columns are only set for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: setColumns
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
        description: >-
          The IDs of the fields to set as columns. In the form data, specify
          each field as `columns=id`, where `id` is the *id* of a field (as seen
          in the response for [Get fields](#api-rest-api-<ver>-field-get)). For
          example, `columns=summary`.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  a non-navigable field is set as a column.
             *  the user does not have permission to view the filter.
        '403':
          description: Returned if the requesting user is not an owner of the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Set Columns '
      tags:
        - Columns
        - Filter
        - REST
        - Sets
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter.column:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/{id}/favourite:
    delete:
      deprecated: false
      description: >-
        Removes a filter as a favorite for the user. Note that this operation
        only removes filters visible to the user from the user's favorites list.
        For example, if the user favorites a public filter that is subsequently
        made private (and is therefore no longer visible on their favorites
        list) they cannot remove it from their favorites list.


        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: deleteFavouriteForFilter
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}
              schema:
                $ref: '#/components/schemas/Filter'
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Remove Filter As Favorite '
      tags:
        - Favorite
        - Favourite
        - Filter
        - REST
        - Removes
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:filter:jira
            - read:group:jira
            - read:issue-type-hierarchy:jira
            - read:issue-type:jira
            - read:project-category:jira
            - read:project-role:jira
            - read:project-version:jira
            - read:project.component:jira
            - read:project:jira
            - read:user:jira
          state: Beta
      x-atlassian-connect-scope: DELETE
    put:
      deprecated: false
      description: >-
        Add a filter as a favorite for the user.


        **[Permissions](#permissions) required:** Permission to access Jira,
        however, the user can only favorite:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: setFavouriteForFilter
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: >-
            Use [expand](#expansion) to include additional information about
            filter in the response. This parameter accepts a comma-separated
            list. Expand options include:

             *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
             *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.
          in: query
          name: expand
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              example: >-
                {"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open
                Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}
              schema:
                $ref: '#/components/schemas/Filter'
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to favorite the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Add Filter As Favorite '
      tags:
        - Favorite
        - Favourite
        - Filter
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - write:filter:jira
            - read:jql:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/{id}/owner:
    put:
      deprecated: false
      description: >-
        Changes the owner of the filter.


        **[Permissions](#permissions) required:** Permission to access Jira.
        However, the user must own the filter or have the *Administer Jira*
        [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: changeFilterOwner
      parameters:
        - description: The ID of the filter to update.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            example:
              accountId: 0000-0000-0000-0000
            schema:
              $ref: '#/components/schemas/ChangeFilterOwner'
        description: The account ID of the new owner of the filter.
        required: true
      responses:
        '204':
          content:
            application/json:
              schema: {}
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned when:

             *  The new owner of the filter owns a filter with the same name.
             *  An attempt is made to change owner of the default filter.
        '403':
          description: >-
            Returned if the requesting user is not an owner of the filter or
            does not have *Administer Jira* global permission.
        '404':
          description: Returned if the filter or the new owner of the filter is not found.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Change Filter Owner '
      tags:
        - Change
        - Filter
        - Owners
        - REST
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - write:filter:jira
          state: Beta
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/{id}/permission:
    get:
      deprecated: false
      description: >-
        Returns the share permissions for a filter. A filter can be shared with
        groups, projects, all logged-in users, or the public. Sharing with all
        logged-in users or the public is known as a global share permission.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None, however, share
        permissions are only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getSharePermissions
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              example: >-
                [{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}]
              schema:
                items:
                  $ref: '#/components/schemas/SharePermission'
                type: array
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Share Permissions '
      tags:
        - Filter
        - Permission
        - Permissions
        - REST
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
            - read:issue-type:jira
            - read:project-category:jira
            - read:project-role:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: READ
    post:
      deprecated: false
      description: >-
        Add a share permissions to a filter. If you add a global share
        permission (one for all logged-in users or the public) it will overwrite
        all share permissions for the filter.


        Be aware that this operation uses different objects for updating share
        permissions compared to [Update filter](#api-rest-api-3-filter-id-put).


        **[Permissions](#permissions) required:** *Share dashboards and filters*
        [global permission](https://confluence.atlassian.com/x/x4dKLg) and the
        user must own the filter.
      operationId: addSharePermission
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            example:
              groupname: jira-administrators
              rights: 1
              type: group
            schema:
              $ref: '#/components/schemas/SharePermissionInputBean'
        required: true
      responses:
        '201':
          content:
            application/json:
              example: >-
                [{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project
                Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a
                project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen
                Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}]
              schema:
                items:
                  $ref: '#/components/schemas/SharePermission'
                type: array
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  the request object is invalid. For example, it contains an invalid type, the ID does not match the type, or the project or group is not found.
             *  the user does not own the filter.
             *  the user does not have the required permissions.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Add Share Permission '
      tags:
        - Filter
        - Permission
        - REST
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter:jira
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
            - read:issue-type:jira
            - read:project-category:jira
            - read:project-role:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: WRITE
  /rest/api/3/filter/{id}/permission/{permissionId}:
    delete:
      deprecated: false
      description: >-
        Deletes a share permission from a filter.


        **[Permissions](#permissions) required:** Permission to access Jira and
        the user must own the filter.
      operationId: deleteSharePermission
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: The ID of the share permission.
          in: path
          name: permissionId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '204':
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not own the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - write:jira-work
        - {}
      summary: 'Delete Share Permission '
      tags:
        - Filter
        - Permission
        - REST
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - write:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - write:filter:jira
          state: Beta
      x-atlassian-connect-scope: DELETE
    get:
      deprecated: false
      description: >-
        Returns a share permission for a filter. A filter can be shared with
        groups, projects, all logged-in users, or the public. Sharing with all
        logged-in users or the public is known as a global share permission.


        This operation can be accessed anonymously.


        **[Permissions](#permissions) required:** None, however, a share
        permission is only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getSharePermission
      parameters:
        - description: The ID of the filter.
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
        - description: The ID of the share permission.
          in: path
          name: permissionId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              example: '{"id":10000,"type":"global"}'
              schema:
                $ref: '#/components/schemas/SharePermission'
          description: Returned if the request is successful.
        '401':
          description: Returned if the authentication credentials are incorrect or missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the permission is not found.
             *  the user does not have permission to view the filter.
      security:
        - basicAuth: []
        - OAuth2:
            - read:jira-work
        - {}
      summary: 'Get Share Permission '
      tags:
        - Filter
        - Permission
        - REST
        - Share
      x-atlassian-data-security-policy:
        - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
        - scheme: OAuth2
          scopes:
            - read:jira-work
          state: Current
        - scheme: OAuth2
          scopes:
            - read:filter:jira
            - read:group:jira
            - read:project:jira
            - read:project-role:jira
            - read:user:jira
            - read:application-role:jira
            - read:avatar:jira
            - read:issue-type-hierarchy:jira
            - read:issue-type:jira
            - read:project-category:jira
            - read:project-version:jira
            - read:project.component:jira
          state: Beta
      x-atlassian-connect-scope: READ
servers:
  - url: https://your-domain.atlassian.net
tags: []
x-atlassian-narrative:
  documents:
    - anchor: about
      body: >-
        The Jira REST API enables you to interact with Jira programmatically.
        Use this API to 

        [build
        apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/),
        script interactions with 

        Jira, or develop any other type of integration. This page documents the
        REST resources available in Jira Cloud, including 

        the HTTP response codes and example requests and responses.
      title: About
    - anchor: version
      body: >
        This documentation is for **version 3** of the Jira Cloud platform REST
        API, which is the latest version

        but is in **beta**. [Version
        2](https://developer.atlassian.com/cloud/jira/platform/rest/v2/) and 

        version 3 of the API offer the same collection of operations. However,
        version 3 provides support for 

        the [Atlassian Document
        Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/) 

        (ADF) in: 

        - `body` in comments, including where comments are used in issue, issue
        link, and transition resources.

        - `comment` in worklogs.

        - `description` and `environment` fields in issues.

        - `textarea` type custom fields (multi-line text fields) in issues.
        Single line custom fields 
          (`textfield`) accept a string and don't handle Atlassian Document Format content.

        However, these new features are under development and may change.
      title: Version
    - anchor: authentication
      body: >
        ### Forge apps


        For Forge apps, [REST API
        scopes](https://developer.atlassian.com/cloud/jira/platform/scopes-for-oauth-2-3LO-and-forge-apps/) 

        are used when authenticating with Jira Cloud platform. See [Add scopes
        to call an Atlassian REST
        API](https://developer.atlassian.com/platform/forge/add-scopes-to-call-an-atlassian-rest-api/)
        for more details.


        The URIs for Forge app REST API calls have this structure:


        `/rest/api/3/<resource-name>`


        For example, `/rest/api/3/issue/DEMO-1`


        ### Connect apps


        For Connect apps, authentication (JWT-based) is built into the Connect
        libraries. Authorization is implemented using either 

        scopes (shown as _App scope required_ for operations on this page) or
        user impersonation. See 

        [Security for Connect
        apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/) 

        for details.


        The URIs for Connect app REST API calls have this structure:


        `https://<site-url>/rest/api/3/<resource-name>`


        For example, `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`


        ### Other integrations


        For integrations that are not Forge or Connect apps, use OAuth 2.0
        authorization code grants (3LO) for security 

        (3LO scopes are shown as for operations _OAuth scopes required_). See 

        [OAuth 2.0 (3LO)
        apps](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps/) 

        for details.


        The URIs for OAuth 2.0 (3LO) app REST API calls have this structure:


        `https://api.atlassian.com/ex/jira/<cloudId>/rest/api/3/<resource-name>`


        For example,
        `https://api.atlassian.com/ex/jira/35273b54-3f06-40d2-880f-dd28cf8daafa/rest/api/3/issue/DEMO-1`


        ### Ad-hoc API calls


        For personal scripts, bots, and ad-hoc execution of the REST APIs use
        basic authentication. See [Basic auth for REST
        APIs](https://developer.atlassian.com/cloud/jira/platform/basic-auth-for-rest-apis/)
        for details. 


        The URIs for basic authentication REST API calls have this structure:


        `https://<site-url>/rest/api/3/<resource-name>`


        For example, `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`
      title: Authentication and authorization
    - anchor: permissions
      body: >
        ### Operation permissions


        Most operations in this API require permissions. The calling user must
        have the required permissions for an operation to 

        use it. Note that for Connect apps, the app user must have the required
        permissions for the operation and the app must 

        have scopes that permit the operation.


        A permission can be granted to a group, project role, or issue role that
        the user is a member of, or granted directly to a user. 

        See [Permissions overview](https://confluence.atlassian.com/x/FQiiLQ)
        for details. The most common permissions are:


        - **Administer the Cloud site**: Users in the _site-admins_ group have
        this 

        permission. See [Manage
        groups](https://confluence.atlassian.com/x/24xjL) for details.

        - **Administer Jira**: Granted by the _Jira Administrators_ global
        permission. There is a default group for this permission. 

        See [Manage groups](https://confluence.atlassian.com/x/24xjL) and
        [Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)
        for details.

        - **Administer a project in Jira**: Granted by the _Administer projects_
        project permission for a project. This can be 

        granted to a user, a group, a project role, and more. 

        See [Managing project
        permissions](https://confluence.atlassian.com/x/yodKLg) for details.

        - **Access a project in Jira**: Granted by the _Browse projects_ project
        permission for a project. This can be 

        granted to a user, a group, a project role, and more. 

        See [Managing project
        permissions](https://confluence.atlassian.com/x/yodKLg) for details.

        - **Access Jira**: Granted by the _Jira Users_ global permission. Users
        in the default product access group (for example, 

        _jira-software-users-acmesite_) have this permission. 

        See [Manage groups](https://confluence.atlassian.com/x/24xjL) and 

        [Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)
        for details.


        ### Anonymous access


        Some operations provide support for anonymous access. However, anonymous
        access is only available if 

        the Jira permission needed to access the object or records returned by
        the operation is granted to 

        the _Public_ group. See [Allowing anonymous access to your
        project](https://confluence.atlassian.com/x/GDxxLg) 

        for details.


        If an operation is called anonymously and anonymous access is not
        available, the operation will return 

        an error. Note that not all operations that correspond to objects that
        can be given public access 

        provide for anonymous access.
      title: Permissions
    - anchor: expansion
      body: >+
        ### Expansion


        The Jira REST API uses resource expansion, which means that some parts
        of a resource are not returned unless specified 

        in the request. This simplifies responses and minimizes network traffic.


        To expand part of a resource in a request, use the expand query
        parameter and specify the object(s) to be expanded. 

        If you need to expand nested objects, use the `.` dot notation. If you
        need to expand multiple objects, use a 

        comma-separated list. 


        For example, the following request expands the `names` and
        `renderedFields` properties for the _JRACLOUD-34423_ issue:


        `GET issue/JRACLOUD-34423?expand=names,renderedFields`


        To discover which object can be expanded, refer to the `expand` property
        in the object. 

        In the JSON example below, the resource declares `widgets` as
        expandable.


        ```json

        {
          "expand": "widgets", 
          "self": "https://your-domain.atlassian.net/rest/api/3/resource/KEY-1", 
          "widgets": {
            "widgets": [],
            "size": 5
           }
        }

        ```


        ### Pagination


        The Jira REST API uses pagination to improve performance. Pagination is
        enforced for operations that could return a large 

        collection of items. When you make a request to a paginated resource,
        the response wraps the returned array of values in 

        a JSON object with paging metadata. For example:


        ```json

        {
            "startAt" : 0,
            "maxResults" : 10,
            "total": 200,
            "isLast": false,
            "values": [
                { /* result 0 */ },
                { /* result 1 */ },
                { /* result 2 */ }
            ]
        }

        ```


        *   `startAt` is the index of the first item returned in the page.

        *   `maxResults` is the maximum number of items that a page can return.
        Each operation can have a different limit for
            the number of items returned, and these limits may change without notice. To find the maximum number of items 
            that an operation could return, set `maxResults` to a large number—for example, over 1000—and if the returned value of `maxResults` is less than the requested value, the returned value is the maximum.
        *    `total` is the total number of items contained in all pages. This
        number **_may change_** as the client 

        requests the subsequent pages, therefore the client should always assume
        that the requested page can be empty. Note 

        that this property is not returned for all operations.

        *   `isLast` indicates whether the page returned is the last one. Note
        that this property is not returned for all operations.


        ### Ordering


        Some operations support ordering the elements of a response by a field.
        Check the documentation for the operation to 

        confirm whether ordering of a response is supported and which fields can
        be used. Responses are listed in ascending order 

        by default. You can change the order using the `orderby` query parameter
        with a `-` or `+` symbol. For example:


        *   `?orderBy=name` to order by `name` field ascending.

        *   `?orderBy=+name` to order by `name` field ascending.

        *   `?orderBy=-name` to order by `name` field descending.


      title: Expansion, pagination, and ordering
    - anchor: timestamps
      body: >
        By default, top-level timestamps (e.g. updated and created) are returned
        in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format, in the system
        default user time zone.


        To return date time data in the logged in user's timezone, please refer
        to `renderedFields` property under the `expand` query parameter in
        relevant APIs.
      title: Timestamps
    - anchor: special-request-headers
      body: >-
        The following request and response headers define important metadata for
        the Jira Cloud REST API resources.


        -   `X-Atlassian-Token` (request): Operations that accept
        multipart/form-data must include the `X-Atlassian-Token: no-check`

        header in requests. Otherwise the request is blocked by cross-site
        request forgery (CSRF/XSRF) protection.

        -   `X-Force-Accept-Language` (request): controls how the standard HTTP
        `Accept-Language` header is processed.

        By default `Accept-Language` is ignored and the response is in the
        language configured in the user's profile or,

        when no language is configured for the user, the default Jira instance
        language. For the response to recognize

        `Accept-Language` send `X-Force-Accept-Language = true` as well. If
        `Accept-Language` requests a language that Jira

        can return the response is in that language, otherwise Jira returns the
        response in the default language. If

        `Accept-Language` is not specified the response is in the default
        language.

        -   `X-AAccountId` (response): This response header contains the
        Atlassian account ID of the authenticated user.
      title: Special headers
    - anchor: anonymous-operations
      body: |2-
         Jira provides for all permissions, except the [global permission](https://confluence.atlassian.com/x/x4dKLg) Administer Jira, to be assigned to *Anyone*. Once a permission is assigned to *Anyone*, anyone knowing a project's URL is able to use the features in Jira enabled by the permission. However, the Jira REST API does not enable anonymous access for operations by default. This means that an anonymous user who may be able to perform an action through Jira, may not be able to perform the same action where it's enabled by the REST API. 

         The operations that provide anonymous access are annotated "This operation can be accessed anonymously."
      title: Anonymous operations
    - anchor: async-operations
      body: >-
        Some Jira REST API operations may trigger long-running or
        computationally expensive tasks. In these cases, the operation 

        will schedule an asynchronous task and return a `303 (See Other)`
        response, indicating the location of the queued task 

        in the `Location` header. You can query this task to get progress
        updates.


        When the task finishes, the response object will contain the `result`
        field. The content of the field is specific to the 

        operation that created the task. Refer to the operation’s documentation
        for more information.


        Note that asynchronous tasks are not guaranteed to be run in order. In
        other words, if you need your tasks to execute 

        in a certain order, you should start a task only after the prerequisite
        task(s) have finished.
      title: Asynchronous operations
    - anchor: experimental
      body: >
        Features and methods marked as experimental may change without notice.
        Feedback on experimental functionality is welcome. 

        Report your suggestions and bugs in the [ACJIRA
        project](https://ecosystem.atlassian.net/projects/ACJIRA) (preferred) or
        use the 

        **Give docs feedback** link at the top of this page. 
      title: Experimental features
    - anchor: status-codes
      body: >-
        The Jira Cloud platform REST API uses the [standard HTTP status
        codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).


        Operations that return an error status code may also return a response
        body containing details of the error or errors. 

        The schema for the response body is shown below:



        ```json

        {
          "id": "https://docs.atlassian.com/jira/REST/schema/error-collection#",
          "title": "Error Collection",
          "type": "object",
          "properties": {
            "errorMessages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "errors": {
              "type": "object",
              "patternProperties": {
                ".+": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "status": { 
              "type": "integer"
            }
          },
          "additionalProperties": false
        }

        ```
      title: Status codes
